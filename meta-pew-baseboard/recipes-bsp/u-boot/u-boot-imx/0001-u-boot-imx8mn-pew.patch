diff --git a/arch/arm/dts/Makefile b/arch/arm/dts/Makefile
index 709fdaec..89e3e361 100644
--- a/arch/arm/dts/Makefile
+++ b/arch/arm/dts/Makefile
@@ -996,6 +996,9 @@ dtb-$(CONFIG_ARCH_IMX8M) += \
 	imx8mq-evk.dtb \
 	imx8mm-beacon-kit.dtb \
 	imx8mn-beacon-kit.dtb \
+	imx8mn-pew-mon.dtb \
+	imx8mn-pew-gw.dtb \
+	imx8mn-pew-bizgw.dtb \
 	imx8mq-mnt-reform2.dtb \
 	imx8mq-phanbell.dtb \
 	imx8mp-ddr4-evk.dtb \
diff --git a/arch/arm/dts/imx8mn-pew-bizgw-u-boot.dtsi b/arch/arm/dts/imx8mn-pew-bizgw-u-boot.dtsi
new file mode 100644
index 00000000..c7cad390
--- /dev/null
+++ b/arch/arm/dts/imx8mn-pew-bizgw-u-boot.dtsi
@@ -0,0 +1,7 @@
+// SPDX-License-Identifier: GPL-2.0+
+ /*
+  * Copyright 2022-2023 Panasonic Corporation
+  */
+
+#include "imx8mn-pew-common-u-boot.dtsi"
+
diff --git a/arch/arm/dts/imx8mn-pew-bizgw.dts b/arch/arm/dts/imx8mn-pew-bizgw.dts
new file mode 100644
index 00000000..156aa23a
--- /dev/null
+++ b/arch/arm/dts/imx8mn-pew-bizgw.dts
@@ -0,0 +1,20 @@
+// SPDX-License-Identifier: GPL-2.0+
+ /*
+  * Copyright 2022-2023 Panasonic Corporation
+  */
+
+#include "imx8mn-pew-common.dtsi"
+
+/ {
+	model = "Panasonic Electric Works i.MX8MN NXGW business gateway type board";
+	compatible = "fsl,imx8mn-pew-bizgw", "fsl,imx8mn-pew", "fsl,imx8mn";
+
+	memory@40000000 {
+		device_type = "memory";
+		reg = <0x0 0x40000000 0 0x20000000>;	/* DDR512MB */
+	};
+};
+
+&i2c4 {
+	clock-frequency = <400000>;
+};
diff --git a/arch/arm/dts/imx8mn-pew-common-u-boot.dtsi b/arch/arm/dts/imx8mn-pew-common-u-boot.dtsi
new file mode 100644
index 00000000..52332710
--- /dev/null
+++ b/arch/arm/dts/imx8mn-pew-common-u-boot.dtsi
@@ -0,0 +1,343 @@
+// SPDX-License-Identifier: GPL-2.0+
+/*
+ * Copyright 2019 NXP
+ * Copyright 2022-2023 Panasonic Corporation
+ */
+
+#include "imx8mn-sec-def.h"
+
+
+/ {
+	binman: binman {
+		multiple-images;
+	};
+
+	wdt-reboot {
+		compatible = "wdt-reboot";
+		wdt = <&wdog1>;
+		u-boot,dm-spl;
+	};
+
+	firmware {
+		optee {
+			compatible = "linaro,optee-tz";
+			method = "smc";
+		};
+	};
+
+	mcu_rdc {
+		compatible = "imx8m,mcu_rdc";
+			    /* rdc config when MCU starts
+			     * master
+			     *   SDMA3p --> domain 1
+			     *   SDMA3b --> domian 1
+			     *   SDMA3_SPBA2  --> domian 1
+			     * peripheral:
+			     *   SAI3   --> Only Domian 1 can access
+			     *   UART4  --> Only Domian 1 can access
+			     *   GPT1   --> Only Domian 1 can access
+			     * memory:
+			     *   TCM    --> Only Domian 1 can access (0x7E0000~0x81FFFF)
+			     *   DDR    --> Only Domian 1 can access (0x80000000~0x81000000)
+			     * end.
+			     */
+		start-config = <
+			    RDC_MDA  RDC_MDA_SDMA3p DID1 0x0 0x0
+			    RDC_MDA  RDC_MDA_SDMA3b DID1 0x0 0x0
+			    RDC_MDA  RDC_MDA_SDMA3_SPBA2 DID1 0x0 0x0
+			    RDC_PDAP RDC_PDAP_SAI3  PDAP_D1_ACCESS 0x0 0x0
+			    RDC_PDAP RDC_PDAP_UART4 PDAP_D1_ACCESS 0x0 0x0
+			    RDC_PDAP RDC_PDAP_GPT1  PDAP_D1_ACCESS 0x0 0x0
+			    RDC_MEM_REGION 26 TCM_START TCM_END MEM_D1_ACCESS
+			    RDC_MEM_REGION 0 M4_EVK_DDR4_START M4_EVK_DDR4_END MEM_D1_ACCESS
+			    0x0      0x0            0x0  0x0 0x0
+			  >;
+			    /* rdc config when MCU stops
+			     * memory:
+			     *   TCM    --> domain 0/1 can access (0x7E0000~0x81FFFF)
+			     *   DDR    --> domain 0/1 can access (0x80000000~0x81000000)
+			     * end.
+			     */
+		stop-config = <
+			    RDC_MEM_REGION 26 TCM_START TCM_END MEM_D0D1_ACCESS
+			    RDC_MEM_REGION 0 M4_EVK_DDR4_START M4_EVK_DDR4_END MEM_D0D1_ACCESS
+			    0x0      0x0            0x0  0x0 0x0
+			  >;
+	};
+};
+
+&{/soc@0} {
+	u-boot,dm-pre-reloc;
+	u-boot,dm-spl;
+};
+
+&clk {
+	u-boot,dm-spl;
+	u-boot,dm-pre-reloc;
+	/delete-property/ assigned-clocks;
+	/delete-property/ assigned-clock-parents;
+	/delete-property/ assigned-clock-rates;
+};
+
+&osc_24m {
+	u-boot,dm-spl;
+	u-boot,dm-pre-reloc;
+};
+
+&aips1 {
+	u-boot,dm-spl;
+	u-boot,dm-pre-reloc;
+};
+
+&aips2 {
+	u-boot,dm-spl;
+};
+
+&aips3 {
+	u-boot,dm-spl;
+};
+
+&iomuxc {
+	u-boot,dm-spl;
+};
+
+&reg_usdhc2_vmmc {
+	u-boot,dm-spl;
+	u-boot,off-on-delay-us = <20000>;
+};
+
+&pinctrl_reg_usdhc2_vmmc {
+	u-boot,dm-spl;
+};
+
+&pinctrl_uart2 {
+	u-boot,dm-spl;
+};
+
+&pinctrl_usdhc2_detect {
+	u-boot,dm-spl;
+};
+
+&pinctrl_usdhc2 {
+	u-boot,dm-spl;
+};
+
+&pinctrl_usdhc3 {
+	u-boot,dm-spl;
+};
+
+&gpio1 {
+	u-boot,dm-spl;
+};
+
+&gpio2 {
+	u-boot,dm-spl;
+};
+
+&gpio3 {
+	u-boot,dm-spl;
+};
+
+&gpio4 {
+	u-boot,dm-spl;
+};
+
+&gpio5 {
+	u-boot,dm-spl;
+};
+
+&uart2 {
+	u-boot,dm-spl;
+};
+
+&crypto {
+	u-boot,dm-spl;
+};
+
+&sec_jr0 {
+	u-boot,dm-spl;
+};
+
+&sec_jr1 {
+	u-boot,dm-spl;
+};
+
+&sec_jr2 {
+	u-boot,dm-spl;
+};
+
+&usdhc2 {
+	u-boot,dm-spl;
+	sd-uhs-sdr104;
+	sd-uhs-ddr50;
+	assigned-clocks = <&clk IMX8MN_CLK_USDHC2>;
+	assigned-clock-rates = <400000000>;
+	assigned-clock-parents = <&clk IMX8MN_SYS_PLL1_400M>;
+};
+
+&usdhc3 {
+	u-boot,dm-spl;
+	mmc-hs400-1_8v;
+	mmc-hs400-enhanced-strobe;
+	assigned-clocks = <&clk IMX8MN_CLK_USDHC3>;
+	assigned-clock-rates = <400000000>;
+	assigned-clock-parents = <&clk IMX8MN_SYS_PLL1_400M>;
+};
+
+&wdog1 {
+	u-boot,dm-spl;
+};
+
+&binman {
+	 u-boot-spl-ddr {
+		filename = "u-boot-spl-ddr.bin";
+		pad-byte = <0xff>;
+		align-size = <4>;
+		align = <4>;
+
+		u-boot-spl {
+			align-end = <4>;
+		};
+
+		blob_1: blob-ext@1 {
+			filename = "lpddr4_pmu_train_1d_imem.bin";
+			size = <0x8000>;
+		};
+
+		blob_2: blob-ext@2 {
+			filename = "lpddr4_pmu_train_1d_dmem.bin";
+			size = <0x4000>;
+		};
+
+		blob_3: blob-ext@3 {
+			filename = "lpddr4_pmu_train_2d_imem.bin";
+			size = <0x8000>;
+		};
+
+		blob_4: blob-ext@4 {
+			filename = "lpddr4_pmu_train_2d_dmem.bin";
+			size = <0x4000>;
+		};
+	};
+
+
+	flash {
+		mkimage {
+			args = "-n spl/u-boot-spl.cfgout -T imx8mimage -e 0x912000";
+
+			blob {
+				filename = "u-boot-spl-ddr.bin";
+			};
+		};
+	};
+
+	itb {
+		filename = "u-boot.itb";
+
+		fit {
+			description = "Configuration to load ATF before U-Boot";
+			#address-cells = <1>;
+			fit,external-offset = <CONFIG_FIT_EXTERNAL_OFFSET>;
+
+			images {
+				uboot {
+					description = "U-Boot (64-bit)";
+					type = "standalone";
+					arch = "arm64";
+					compression = "none";
+					load = <CONFIG_SYS_TEXT_BASE>;
+
+					uboot_blob: blob-ext {
+						filename = "u-boot-nodtb.bin";
+					};
+				};
+
+				atf {
+					description = "ARM Trusted Firmware";
+					type = "firmware";
+					arch = "arm64";
+					compression = "none";
+					load = <0x960000>;
+					entry = <0x960000>;
+
+					atf_blob: blob-ext {
+						filename = "bl31.bin";
+					};
+				};
+
+				fdt {
+					description = "NAME";
+					type = "flat_dt";
+					compression = "none";
+
+					uboot_fdt_blob: blob-ext {
+						filename = "u-boot.dtb";
+					};
+				};
+			};
+
+			configurations {
+				default = "conf";
+
+				conf {
+					description = "NAME";
+					firmware = "uboot";
+					loadables = "atf";
+					fdt = "fdt";
+				};
+			};
+		};
+	};
+};
+
+&tmu {
+	u-boot,dm-pre-reloc;
+};
+
+&i2c1 {
+	u-boot,dm-spl;
+};
+
+&pinctrl_i2c1 {
+	u-boot,dm-spl;
+};
+
+&{/soc@0/bus@30800000/i2c@30a20000/pca9450@25} {
+	u-boot,dm-spl;
+};
+
+&{/soc@0/bus@30800000/i2c@30a20000/pca9450@25/regulators} {
+	u-boot,dm-spl;
+};
+
+&pinctrl_i2c1_gpio {
+	u-boot,dm-spl;
+};
+
+&pinctrl_pmic {
+	u-boot,dm-spl;
+};
+
+&i2c2 {
+	u-boot,dm-spl;
+};
+
+&pinctrl_i2c2 {
+	u-boot,dm-spl;
+};
+
+&pinctrl_i2c2_gpio {
+	u-boot,dm-spl;
+};
+
+&i2c4 {
+	u-boot,dm-spl;
+};
+
+&pinctrl_i2c4 {
+	u-boot,dm-spl;
+};
+
+&pinctrl_i2c4_gpio {
+	u-boot,dm-spl;
+};
diff --git a/arch/arm/dts/imx8mn-pew-common.dtsi b/arch/arm/dts/imx8mn-pew-common.dtsi
new file mode 100644
index 00000000..d1576fef
--- /dev/null
+++ b/arch/arm/dts/imx8mn-pew-common.dtsi
@@ -0,0 +1,375 @@
+// SPDX-License-Identifier: GPL-2.0+
+ /*
+  * Copyright 2020 NXP
+  * Copyright 2022-2023 Panasonic Corporation
+  */
+
+/dts-v1/;
+
+#include <dt-bindings/usb/pd.h>
+#include "imx8mn.dtsi"
+#include <dt-bindings/interrupt-controller/irq.h>
+
+/ {
+	model = "Panasonic Electric Works i.MX8MN NXGW board";
+	compatible = "fsl,imx8mn-pew", "fsl,imx8mn";
+
+	chosen {
+		bootargs = "console=ttymxc1,115200 earlycon=ec_imx6q,0x30890000,115200";
+		stdout-path = &uart2;
+	};
+
+	reg_usdhc2_vmmc: regulator-usdhc2 {
+		compatible = "regulator-fixed";
+		pinctrl-names = "default";
+		pinctrl-0 = <&pinctrl_reg_usdhc2_vmmc>;
+		regulator-name = "VSD_3V3";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		gpio = <&gpio2 19 GPIO_ACTIVE_HIGH>;	/* SD2_NRST */
+		enable-active-high;
+	};
+};
+
+&A53_0 {
+	cpu-supply = <&buck2>;
+};
+
+&A53_1 {
+	cpu-supply = <&buck2>;
+};
+
+&A53_2 {
+	cpu-supply = <&buck2>;
+};
+
+&A53_3 {
+	cpu-supply = <&buck2>;
+};
+
+&i2c1 {
+	clock-frequency = <100000>;
+	pinctrl-names = "default", "gpio";
+	pinctrl-0 = <&pinctrl_i2c1>;
+	pinctrl-1 = <&pinctrl_i2c1_gpio>;
+	scl-gpios = <&gpio5 14 GPIO_ACTIVE_HIGH>;
+	sda-gpios = <&gpio5 15 GPIO_ACTIVE_HIGH>;
+	status = "okay";
+
+	pmic: pca9450@25 {
+		compatible = "nxp,pca9450b";
+		reg = <0x25>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&pinctrl_pmic>;
+		interrupt-parent = <&gpio1>;
+		interrupts = <3 IRQ_TYPE_LEVEL_LOW>;
+
+		regulators {
+			buck1: BUCK1{
+				regulator-name = "BUCK1";
+				regulator-min-microvolt = <950000>;
+				regulator-max-microvolt = <950000>;
+				regulator-boot-on;
+				regulator-always-on;
+				regulator-ramp-delay = <3125>;
+			};
+
+			buck2: BUCK2 {
+				regulator-name = "BUCK2";
+				regulator-min-microvolt = <600000>;
+				regulator-max-microvolt = <2187500>;
+				regulator-boot-on;
+				regulator-always-on;
+				regulator-ramp-delay = <3125>;
+				nxp,dvs-run-voltage = <950000>;
+				nxp,dvs-standby-voltage = <850000>;
+			};
+
+			buck4: BUCK4{
+				regulator-name = "BUCK4";
+				regulator-min-microvolt = <600000>;
+				regulator-max-microvolt = <3400000>;
+				regulator-boot-on;
+				regulator-always-on;
+			};
+
+			buck5: BUCK5{
+				regulator-name = "BUCK5";
+				regulator-min-microvolt = <600000>;
+				regulator-max-microvolt = <3400000>;
+				regulator-boot-on;
+				regulator-always-on;
+			};
+
+			buck6: BUCK6 {
+				regulator-name = "BUCK6";
+				regulator-min-microvolt = <600000>;
+				regulator-max-microvolt = <3400000>;
+				regulator-boot-on;
+				regulator-always-on;
+			};
+
+			ldo1: LDO1 {
+				regulator-name = "LDO1";
+				regulator-min-microvolt = <1800000>;
+				regulator-max-microvolt = <3300000>;
+				regulator-boot-on;
+				regulator-always-on;
+			};
+
+			ldo2: LDO2 {
+				regulator-name = "LDO2";
+				regulator-min-microvolt = <800000>;
+				regulator-max-microvolt = <1150000>;
+				regulator-boot-on;
+				regulator-always-on;
+			};
+
+			ldo3: LDO3 {
+				regulator-name = "LDO3";
+				regulator-min-microvolt = <800000>;
+				regulator-max-microvolt = <3300000>;
+				regulator-boot-on;
+				regulator-always-on;
+			};
+
+			ldo4: LDO4 {
+				regulator-name = "LDO4";
+				regulator-min-microvolt = <1200000>;
+				regulator-max-microvolt = <1200000>;
+				regulator-boot-on;
+				regulator-always-on;
+			};
+
+			ldo5: LDO5 {
+				regulator-name = "LDO5";
+				regulator-min-microvolt = <1800000>;
+				regulator-max-microvolt = <3300000>;
+				regulator-boot-on;
+				regulator-always-on;
+			};
+		};
+	};
+};
+
+&i2c2 {
+	clock-frequency = <100000>;
+	pinctrl-names = "default", "gpio";
+	pinctrl-0 = <&pinctrl_i2c2>;
+	pinctrl-1 = <&pinctrl_i2c2_gpio>;
+	scl-gpios = <&gpio5 16 GPIO_ACTIVE_HIGH>;
+	sda-gpios = <&gpio5 17 GPIO_ACTIVE_HIGH>;
+	status = "okay";
+};
+
+&i2c4 {
+	clock-frequency = <100000>;
+	pinctrl-names = "default", "gpio";
+	pinctrl-0 = <&pinctrl_i2c4>;
+	pinctrl-1 = <&pinctrl_i2c4_gpio>;
+	scl-gpios = <&gpio5 20 GPIO_ACTIVE_HIGH>;
+	sda-gpios = <&gpio5 21 GPIO_ACTIVE_HIGH>;
+	status = "okay";
+};
+
+/* console */
+&uart2 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_uart2>;
+	status = "okay";
+};
+
+/* SD Card */
+&usdhc2 {
+	assigned-clocks = <&clk IMX8MN_CLK_USDHC2>;
+	assigned-clock-rates = <200000000>;
+	pinctrl-names = "default", "state_100mhz", "state_200mhz";
+	pinctrl-0 = <&pinctrl_usdhc2>, <&pinctrl_usdhc2_detect>;
+	pinctrl-1 = <&pinctrl_usdhc2>, <&pinctrl_usdhc2_detect>;
+	pinctrl-2 = <&pinctrl_usdhc2>, <&pinctrl_usdhc2_detect>;
+	cd-gpios = <&gpio2 12 GPIO_ACTIVE_LOW>;		/* SD2_Detect */
+	bus-width = <4>;
+	vmmc-supply = <&reg_usdhc2_vmmc>;
+	status = "okay";
+};
+
+/* eMMC */
+&usdhc3 {
+	assigned-clocks = <&clk IMX8MN_CLK_USDHC3_ROOT>;
+	assigned-clock-rates = <400000000>;
+	pinctrl-names = "default", "state_100mhz", "state_200mhz";
+	pinctrl-0 = <&pinctrl_usdhc3>;
+	pinctrl-1 = <&pinctrl_usdhc3_100mhz>;
+	pinctrl-2 = <&pinctrl_usdhc3_200mhz>;
+	bus-width = <8>;
+	non-removable;
+	status = "okay";
+};
+
+/* Watch Dog */
+&wdog1 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_wdog>;
+	fsl,ext-reset-output;
+	status = "okay";
+};
+
+&iomuxc {
+	pinctrl_i2c1: i2c1grp {
+		fsl,pins = <
+			MX8MN_IOMUXC_I2C1_SCL_I2C1_SCL			0x400000c3
+			MX8MN_IOMUXC_I2C1_SDA_I2C1_SDA			0x400000c3
+		>;
+	};
+
+	pinctrl_i2c1_gpio: i2c1gpiogrp {
+		fsl,pins = <
+			MX8MN_IOMUXC_I2C1_SCL_GPIO5_IO14		0x0c3
+			MX8MN_IOMUXC_I2C1_SDA_GPIO5_IO15		0x0c3
+		>;
+	};
+
+	pinctrl_i2c2: i2c2grp {
+		fsl,pins = <
+			MX8MN_IOMUXC_I2C2_SCL_I2C2_SCL			0x400000c3
+			MX8MN_IOMUXC_I2C2_SDA_I2C2_SDA			0x400000c3
+		>;
+	};
+
+	pinctrl_i2c2_gpio: i2c2grp-gpio {
+		fsl,pins = <
+			MX8MN_IOMUXC_I2C2_SCL_GPIO5_IO16		0x0c3
+			MX8MN_IOMUXC_I2C2_SDA_GPIO5_IO17		0x0c3
+		>;
+	};
+
+	pinctrl_i2c4: i2c4grp {
+		fsl,pins = <
+			MX8MN_IOMUXC_I2C4_SCL_I2C4_SCL			0x400000c3
+			MX8MN_IOMUXC_I2C4_SDA_I2C4_SDA			0x400000c3
+		>;
+	};
+
+	pinctrl_i2c4_gpio: i2c4gpiogrp {
+		fsl,pins = <
+			MX8MN_IOMUXC_I2C4_SCL_GPIO5_IO20		0x0c3
+			MX8MN_IOMUXC_I2C4_SDA_GPIO5_IO21		0x0c3
+		>;
+	};
+
+	pinctrl_uart2: uart2grp {
+		fsl,pins = <
+			MX8MN_IOMUXC_UART2_RXD_UART2_DCE_RX		0x040
+			MX8MN_IOMUXC_UART2_TXD_UART2_DCE_TX		0x040
+		>;
+	};
+
+	pinctrl_reg_usdhc2_vmmc: regusdhc2vmmcgrp {
+		fsl,pins = <
+			MX8MN_IOMUXC_SD2_RESET_B_GPIO2_IO19		0x041	/* SD2_NRST */
+		>;
+	};
+
+	pinctrl_usdhc2_detect: usdhc2detectgrp {
+		fsl,pins = <
+			MX8MN_IOMUXC_SD2_CD_B_GPIO2_IO12		0x016	/* SD2_Detect */
+		>;
+	};
+
+	pinctrl_usdhc2: usdhc2grp {
+		fsl,pins = <
+			MX8MN_IOMUXC_SD2_CLK_USDHC2_CLK			0x094
+			MX8MN_IOMUXC_SD2_CMD_USDHC2_CMD			0x0d0
+			MX8MN_IOMUXC_SD2_DATA0_USDHC2_DATA0		0x0d0
+			MX8MN_IOMUXC_SD2_DATA1_USDHC2_DATA1		0x0d0
+			MX8MN_IOMUXC_SD2_DATA2_USDHC2_DATA2		0x0d0
+			MX8MN_IOMUXC_SD2_DATA3_USDHC2_DATA3		0x0d0
+			MX8MN_IOMUXC_GPIO1_IO04_USDHC2_VSELECT	0x1d0
+		>;
+	};
+
+	pinctrl_usdhc2_100mhz: usdhc2-100mhzgrp {
+		fsl,pins = <
+			MX8MN_IOMUXC_SD2_CLK_USDHC2_CLK			0x094
+			MX8MN_IOMUXC_SD2_CMD_USDHC2_CMD			0x0d4
+			MX8MN_IOMUXC_SD2_DATA0_USDHC2_DATA0		0x0d4
+			MX8MN_IOMUXC_SD2_DATA1_USDHC2_DATA1		0x0d4
+			MX8MN_IOMUXC_SD2_DATA2_USDHC2_DATA2		0x0d4
+			MX8MN_IOMUXC_SD2_DATA3_USDHC2_DATA3		0x0d4
+			MX8MN_IOMUXC_GPIO1_IO04_USDHC2_VSELECT	0x1d4
+		>;
+	};
+
+	pinctrl_usdhc2_200mhz: usdhc2-200mhzgrp {
+		fsl,pins = <
+			MX8MN_IOMUXC_SD2_CLK_USDHC2_CLK			0x096
+			MX8MN_IOMUXC_SD2_CMD_USDHC2_CMD			0x0d6
+			MX8MN_IOMUXC_SD2_DATA0_USDHC2_DATA0		0x0d6
+			MX8MN_IOMUXC_SD2_DATA1_USDHC2_DATA1		0x0d6
+			MX8MN_IOMUXC_SD2_DATA2_USDHC2_DATA2		0x0d6
+			MX8MN_IOMUXC_SD2_DATA3_USDHC2_DATA3		0x0d6
+			MX8MN_IOMUXC_GPIO1_IO04_USDHC2_VSELECT	0x1d6
+		>;
+	};
+
+	pinctrl_usdhc3: usdhc3grp {
+		fsl,pins = <
+			MX8MN_IOMUXC_NAND_WE_B_USDHC3_CLK		0x190
+			MX8MN_IOMUXC_NAND_WP_B_USDHC3_CMD		0x1d0
+			MX8MN_IOMUXC_NAND_DATA04_USDHC3_DATA0	0x1d0
+			MX8MN_IOMUXC_NAND_DATA05_USDHC3_DATA1	0x1d0
+			MX8MN_IOMUXC_NAND_DATA06_USDHC3_DATA2	0x1d0
+			MX8MN_IOMUXC_NAND_DATA06_USDHC3_DATA2	0x1d0
+			MX8MN_IOMUXC_NAND_DATA07_USDHC3_DATA3	0x1d0
+			MX8MN_IOMUXC_NAND_RE_B_USDHC3_DATA4		0x1d0
+			MX8MN_IOMUXC_NAND_CE2_B_USDHC3_DATA5	0x1d0
+			MX8MN_IOMUXC_NAND_CE3_B_USDHC3_DATA6	0x1d0
+			MX8MN_IOMUXC_NAND_CLE_USDHC3_DATA7		0x1d0
+			MX8MN_IOMUXC_NAND_CE1_B_USDHC3_STROBE	0x190
+		>;
+	};
+
+	pinctrl_usdhc3_100mhz: usdhc3-100mhzgrp {
+		fsl,pins = <
+			MX8MN_IOMUXC_NAND_WE_B_USDHC3_CLK		0x194
+			MX8MN_IOMUXC_NAND_WP_B_USDHC3_CMD		0x1d4
+			MX8MN_IOMUXC_NAND_DATA04_USDHC3_DATA0	0x1d4
+			MX8MN_IOMUXC_NAND_DATA05_USDHC3_DATA1	0x1d4
+			MX8MN_IOMUXC_NAND_DATA06_USDHC3_DATA2	0x1d4
+			MX8MN_IOMUXC_NAND_DATA07_USDHC3_DATA3	0x1d4
+			MX8MN_IOMUXC_NAND_RE_B_USDHC3_DATA4		0x1d4
+			MX8MN_IOMUXC_NAND_CE2_B_USDHC3_DATA5	0x1d4
+			MX8MN_IOMUXC_NAND_CE3_B_USDHC3_DATA6	0x1d4
+			MX8MN_IOMUXC_NAND_CLE_USDHC3_DATA7		0x1d4
+			MX8MN_IOMUXC_NAND_CE1_B_USDHC3_STROBE	0x194
+		>;
+	};
+
+	pinctrl_usdhc3_200mhz: usdhc3-200mhzgrp {
+		fsl,pins = <
+			MX8MN_IOMUXC_NAND_WE_B_USDHC3_CLK		0x196
+			MX8MN_IOMUXC_NAND_WP_B_USDHC3_CMD		0x1d6
+			MX8MN_IOMUXC_NAND_DATA04_USDHC3_DATA0	0x1d6
+			MX8MN_IOMUXC_NAND_DATA05_USDHC3_DATA1	0x1d6
+			MX8MN_IOMUXC_NAND_DATA06_USDHC3_DATA2	0x1d6
+			MX8MN_IOMUXC_NAND_DATA07_USDHC3_DATA3	0x1d6
+			MX8MN_IOMUXC_NAND_RE_B_USDHC3_DATA4		0x1d6
+			MX8MN_IOMUXC_NAND_CE2_B_USDHC3_DATA5	0x1d6
+			MX8MN_IOMUXC_NAND_CE3_B_USDHC3_DATA6	0x1d6
+			MX8MN_IOMUXC_NAND_CLE_USDHC3_DATA7		0x1d6
+			MX8MN_IOMUXC_NAND_CE1_B_USDHC3_STROBE	0x196
+		>;
+	};
+
+	pinctrl_pmic: pmicirqgrp {
+		fsl,pins = <
+			MX8MN_IOMUXC_GPIO1_IO03_GPIO1_IO3		0x016
+		>;
+	};
+
+	pinctrl_wdog: wdoggrp {
+		fsl,pins = <
+			MX8MN_IOMUXC_GPIO1_IO02_WDOG1_WDOG_B	0x0c6
+		>;
+	};
+};
diff --git a/arch/arm/dts/imx8mn-pew-gw-u-boot.dtsi b/arch/arm/dts/imx8mn-pew-gw-u-boot.dtsi
new file mode 100644
index 00000000..f2bacbd4
--- /dev/null
+++ b/arch/arm/dts/imx8mn-pew-gw-u-boot.dtsi
@@ -0,0 +1,6 @@
+// SPDX-License-Identifier: GPL-2.0+
+ /*
+  * Copyright 2022-2023 Panasonic Corporation
+  */
+
+#include "imx8mn-pew-common-u-boot.dtsi"
diff --git a/arch/arm/dts/imx8mn-pew-gw.dts b/arch/arm/dts/imx8mn-pew-gw.dts
new file mode 100644
index 00000000..3338ecd4
--- /dev/null
+++ b/arch/arm/dts/imx8mn-pew-gw.dts
@@ -0,0 +1,16 @@
+// SPDX-License-Identifier: GPL-2.01
+ /*
+  * Copyright 2022-2023 Panasonic Corporation
+  */
+
+#include "imx8mn-pew-common.dtsi"
+
+/ {
+	model = "Panasonic Electric Works i.MX8MN NXGW gateway type board";
+	compatible = "fsl,imx8mn-pew-gw", "fsl,imx8mn-pew", "fsl,imx8mn";
+
+	memory@40000000 {
+		device_type = "memory";
+		reg = <0x0 0x40000000 0 0x20000000>;	/* DDR512MB */
+	};
+};
diff --git a/arch/arm/dts/imx8mn-pew-mon-u-boot.dtsi b/arch/arm/dts/imx8mn-pew-mon-u-boot.dtsi
new file mode 100644
index 00000000..7e4d19f0
--- /dev/null
+++ b/arch/arm/dts/imx8mn-pew-mon-u-boot.dtsi
@@ -0,0 +1,18 @@
+// SPDX-License-Identifier: GPL-2.0+
+ /*
+  * Copyright 2022-2023 Panasonic Corporation
+  */
+
+#include "imx8mn-pew-common-u-boot.dtsi"
+
+&i2c3 {
+	u-boot,dm-spl;
+};
+
+&pinctrl_i2c3 {
+	u-boot,dm-spl;
+};
+
+&pinctrl_i2c3_gpio {
+	u-boot,dm-spl;
+};
diff --git a/arch/arm/dts/imx8mn-pew-mon.dts b/arch/arm/dts/imx8mn-pew-mon.dts
new file mode 100644
index 00000000..591da0b2
--- /dev/null
+++ b/arch/arm/dts/imx8mn-pew-mon.dts
@@ -0,0 +1,47 @@
+// SPDX-License-Identifier: GPL-2.01
+ /*
+  * Copyright 2022-2023 Panasonic Corporation
+  */
+
+#include "imx8mn-pew-common.dtsi"
+
+/ {
+	model = "Panasonic Electric Works i.MX8MN NXGW monitor type board";
+	compatible = "fsl,imx8mn-pew-mon", "fsl,imx8mn-pew", "fsl,imx8mn";
+
+	memory@40000000 {
+		device_type = "memory";
+		reg = <0x0 0x40000000 0 0x40000000>;	/* DDR1GB */
+	};
+};
+
+&i2c3 {
+	clock-frequency = <100000>;
+	pinctrl-names = "default", "gpio";
+	pinctrl-0 = <&pinctrl_i2c3>;
+	pinctrl-1 = <&pinctrl_i2c3_gpio>;
+	scl-gpios = <&gpio5 18 GPIO_ACTIVE_HIGH>;
+	sda-gpios = <&gpio5 19 GPIO_ACTIVE_HIGH>;
+	status = "okay";
+	/* techshine_panel_pmic */
+	max20067gtj: max20067gtj@20 {
+		compatible = "analogdevices,max20067gtj";
+		reg = <0x20>;
+	};
+};
+
+&iomuxc {
+	pinctrl_i2c3: i2c3grp {
+		fsl,pins = <
+			MX8MN_IOMUXC_I2C3_SCL_I2C3_SCL		0x400000c3
+			MX8MN_IOMUXC_I2C3_SDA_I2C3_SDA		0x400000c3
+		>;
+	};
+
+	pinctrl_i2c3_gpio: i2c3grp-gpio {
+		fsl,pins = <
+			MX8MN_IOMUXC_I2C3_SCL_GPIO5_IO18	0x0c3
+			MX8MN_IOMUXC_I2C3_SDA_GPIO5_IO19	0x0c3
+		>;
+	};
+};
diff --git a/arch/arm/mach-imx/imx8m/Kconfig b/arch/arm/mach-imx/imx8m/Kconfig
index a225a978..d8d82d8a 100644
--- a/arch/arm/mach-imx/imx8m/Kconfig
+++ b/arch/arm/mach-imx/imx8m/Kconfig
@@ -24,6 +24,9 @@ config IMX8MP
 	bool
 	select IMX8M
 
+config IMX8MN_PEW
+    bool
+
 config SYS_SOC
 	default "imx8m"
 
@@ -179,6 +182,36 @@ config TARGET_IMX8MN_EVK
 	select FSL_BLOB
 	select SPL_CRYPTO if SPL
 
+config TARGET_IMX8MN_PEW_MON
+	bool "imx8mn Panasonic Electric Works NXGW monitor type board"
+	select IMX8MN
+	select IMX8MN_PEW
+	select SUPPORT_SPL
+	select IMX8M_LPDDR4
+	select FSL_CAAM
+	select FSL_BLOB
+	select SPL_CRYPTO if SPL
+
+config TARGET_IMX8MN_PEW_GW
+	bool "imx8mn Panasonic Electric Works NXGW gateway type board"
+	select IMX8MN
+	select IMX8MN_PEW
+	select SUPPORT_SPL
+	select IMX8M_LPDDR4
+	select FSL_CAAM
+	select FSL_BLOB
+	select SPL_CRYPTO if SPL
+
+config TARGET_IMX8MN_PEW_BIZGW
+	bool "imx8mn Panasonic Electric Works NXGW business gateway type board"
+	select IMX8MN
+	select IMX8MN_PEW
+	select SUPPORT_SPL
+	select IMX8M_LPDDR4
+	select FSL_CAAM
+	select FSL_BLOB
+	select SPL_CRYPTO if SPL
+
 config TARGET_IMX8MN_DDR4_EVK
 	bool "imx8mn DDR4 EVK board"
 	select IMX8MN
@@ -354,6 +387,7 @@ source "board/freescale/imx8mm_ab2/Kconfig"
 source "board/freescale/imx8mm_evk/Kconfig"
 source "board/freescale/imx8mm_val/Kconfig"
 source "board/freescale/imx8mn_evk/Kconfig"
+source "board/freescale/imx8mn_pew/Kconfig"
 source "board/freescale/imx8mp_evk/Kconfig"
 source "board/gateworks/venice/Kconfig"
 source "board/google/imx8mq_phanbell/Kconfig"
diff --git a/board/freescale/common/mmc.c b/board/freescale/common/mmc.c
index ab1652d6..a8f68571 100644
--- a/board/freescale/common/mmc.c
+++ b/board/freescale/common/mmc.c
@@ -2,6 +2,7 @@
 /*
  * Copyright (C) 2016 Freescale Semiconductor, Inc.
  * Copyright 2018 NXP
+ * Copyright 2022-2023 Panasonic Corporation
  */
 #include <common.h>
 #include <command.h>
@@ -35,6 +36,10 @@ void board_late_mmc_env_init(void)
 	char cmd[32];
 	char mmcblk[32];
 	u32 dev_no = mmc_get_env_dev();
+	char *p_mmcroot_defstr = NULL;
+	char *p_cmd;
+	char *p_part;
+	int partno;
 
 	if (!check_mmc_autodetect())
 		return;
@@ -42,8 +47,30 @@ void board_late_mmc_env_init(void)
 	env_set_ulong("mmcdev", dev_no);
 
 	/* Set mmcblk env */
-	sprintf(mmcblk, "/dev/mmcblk%dp2 rootwait rw",
-		mmc_map_to_kernel_blk(dev_no));
+	p_cmd = env_get("select_mmcroot");
+	if(p_cmd)
+	{
+		run_command(p_cmd, 0);
+		p_mmcroot_defstr = env_get("mmcroot");
+	}
+
+	partno = 1;
+	if(NULL != p_mmcroot_defstr)
+	{
+		if(NULL != strstr(p_mmcroot_defstr, "/dev/mmcblk"))
+		{
+			if(NULL != (p_part = strchr(p_mmcroot_defstr, 'p')))
+			{
+				/* !!The root partition number must be one digit!! */
+				p_part++;
+				partno = (*p_part) - 0x30;
+			}
+		}
+	}
+	env_set_ulong("mmcpart", partno);
+
+	sprintf(mmcblk, "/dev/mmcblk%dp%d rootwait rw",
+		mmc_map_to_kernel_blk(dev_no), partno);
 	env_set("mmcroot", mmcblk);
 
 	sprintf(cmd, "mmc dev %d", dev_no);
diff --git a/board/freescale/imx8mn_pew/Kconfig b/board/freescale/imx8mn_pew/Kconfig
new file mode 100644
index 00000000..49f457b7
--- /dev/null
+++ b/board/freescale/imx8mn_pew/Kconfig
@@ -0,0 +1,17 @@
+if TARGET_IMX8MN_PEW_MON || TARGET_IMX8MN_PEW_GW || TARGET_IMX8MN_PEW_BIZGW
+
+config SYS_BOARD
+	default "imx8mn_pew"
+
+config SYS_VENDOR
+	default "freescale"
+
+config SYS_CONFIG_NAME
+	default "imx8mn_pew"
+
+config IMX_CONFIG
+	default "board/freescale/imx8mn_pew/imximage-8mn-ddr4.cfg"
+
+source "board/freescale/common/Kconfig"
+
+endif
diff --git a/board/freescale/imx8mn_pew/MAINTAINERS b/board/freescale/imx8mn_pew/MAINTAINERS
new file mode 100644
index 00000000..85ba37f8
--- /dev/null
+++ b/board/freescale/imx8mn_pew/MAINTAINERS
@@ -0,0 +1,8 @@
+i.MX8MN Panasonic Electric Works board
+M:	
+S:	Maintained
+F:	board/freescale/imx8mn_pew/
+F:	include/configs/imx8mn_pew.h
+F:	configs/imx8mn_pew_mon_defconfig
+F:	configs/imx8mn_pew_gw_defconfig
+F:	configs/imx8mn_pew_bizgw_defconfig
diff --git a/board/freescale/imx8mn_pew/Makefile b/board/freescale/imx8mn_pew/Makefile
new file mode 100644
index 00000000..0f715a7b
--- /dev/null
+++ b/board/freescale/imx8mn_pew/Makefile
@@ -0,0 +1,13 @@
+#
+# Copyright 2018 NXP
+#
+# SPDX-License-Identifier:      GPL-2.0+
+# Copyright 2022-2023 Panasonic Corporation
+#
+
+obj-y += imx8mn_pew.o
+
+ifdef CONFIG_SPL_BUILD
+obj-y += spl.o
+obj-$(CONFIG_IMX8M_LPDDR4) += lpddr4_timing.o
+endif
diff --git a/board/freescale/imx8mn_pew/imx8mn_pew.c b/board/freescale/imx8mn_pew/imx8mn_pew.c
new file mode 100644
index 00000000..06460743
--- /dev/null
+++ b/board/freescale/imx8mn_pew/imx8mn_pew.c
@@ -0,0 +1,401 @@
+// SPDX-License-Identifier: GPL-2.0+
+/*
+ * Copyright 2019 NXP
+ * Copyright 2022-2023 Panasonic Corporation
+ */
+
+#include <common.h>
+#include <efi_loader.h>
+#include <env.h>
+#include <init.h>
+#include <asm/global_data.h>
+#include <asm/mach-imx/iomux-v3.h>
+#include <asm-generic/gpio.h>
+#include <asm/arch/imx8mn_pins.h>
+#include <asm/arch/clock.h>
+#include <asm/arch/sys_proto.h>
+#include <asm/mach-imx/gpio.h>
+#include <asm/io.h>
+
+DECLARE_GLOBAL_DATA_PTR;
+
+#if CONFIG_IS_ENABLED(EFI_HAVE_CAPSULE_SUPPORT)
+struct efi_fw_image fw_images[] = {
+	{
+		.image_type_id = IMX_BOOT_IMAGE_GUID,
+		.fw_name = u"IMX8MN-EVK-RAW",
+		.image_index = 1,
+	},
+};
+
+struct efi_capsule_update_info update_info = {
+	.dfu_string = "mmc 2=flash-bin raw 0 0x2000 mmcpart 1",
+	.images = fw_images,
+};
+
+u8 num_image_type_guids = ARRAY_SIZE(fw_images);
+#endif /* EFI_HAVE_CAPSULE_SUPPORT */
+
+#ifdef CONFIG_SPL_BUILD
+static iomux_v3_cfg_t const iomux_pads[] = {
+
+	/* I2C1 */
+	IMX8MN_PAD_I2C1_SCL__I2C1_SCL			| MUX_PAD_CTRL(0x0c3),
+	IMX8MN_PAD_I2C1_SDA__I2C1_SDA			| MUX_PAD_CTRL(0x0c3),
+
+	/* I2C2 */
+	IMX8MN_PAD_I2C2_SCL__I2C2_SCL			| MUX_PAD_CTRL(0x0c3),
+	IMX8MN_PAD_I2C2_SDA__I2C2_SDA			| MUX_PAD_CTRL(0x0c3),
+
+	/* I2C4 */
+	IMX8MN_PAD_I2C4_SCL__I2C4_SCL			| MUX_PAD_CTRL(0x0c3),
+	IMX8MN_PAD_I2C4_SDA__I2C4_SDA			| MUX_PAD_CTRL(0x0c3),
+
+	/* UART2 */
+	IMX8MN_PAD_UART2_RXD__UART2_DCE_RX		| MUX_PAD_CTRL(0x040),
+	IMX8MN_PAD_UART2_TXD__UART2_DCE_TX		| MUX_PAD_CTRL(0x040),
+
+	/* UART3 */
+	IMX8MN_PAD_ECSPI1_SCLK__UART3_DCE_RX	| MUX_PAD_CTRL(0x040),
+	IMX8MN_PAD_ECSPI1_MOSI__UART3_DCE_TX	| MUX_PAD_CTRL(0x040),
+	IMX8MN_PAD_ECSPI1_SS0__UART3_DCE_RTS_B	| MUX_PAD_CTRL(0x040),
+	IMX8MN_PAD_ECSPI1_MISO__UART3_DCE_CTS_B	| MUX_PAD_CTRL(0x040),
+
+	/* UART4 */
+	IMX8MN_PAD_ECSPI2_SCLK__UART4_DCE_RX	| MUX_PAD_CTRL(0x040),
+	IMX8MN_PAD_ECSPI2_MOSI__UART4_DCE_TX	| MUX_PAD_CTRL(0x040),
+
+	/* Ethernet */
+	IMX8MN_PAD_ENET_MDC__ENET1_MDC			| MUX_PAD_CTRL(0x003),
+	IMX8MN_PAD_ENET_MDIO__ENET1_MDIO		| MUX_PAD_CTRL(0x003),
+	IMX8MN_PAD_ENET_TD1__ENET1_RGMII_TD1	| MUX_PAD_CTRL(0x01f),
+	IMX8MN_PAD_ENET_TD0__ENET1_RGMII_TD0	| MUX_PAD_CTRL(0x01f),
+	IMX8MN_PAD_ENET_RD1__ENET1_RGMII_RD1	| MUX_PAD_CTRL(0x091),
+	IMX8MN_PAD_ENET_RD0__ENET1_RGMII_RD0	| MUX_PAD_CTRL(0x091),
+	IMX8MN_PAD_ENET_RX_CTL__ENET1_RGMII_RX_CTL | MUX_PAD_CTRL(0x091),
+	IMX8MN_PAD_ENET_TX_CTL__ENET1_RGMII_TX_CTL | MUX_PAD_CTRL(0x01f),
+	IMX8MN_PAD_ENET_TD2__ENET1_TX_CLK		| MUX_PAD_CTRL(0x01f),
+
+	/* USDHC2 */
+	IMX8MN_PAD_GPIO1_IO04__USDHC2_VSELECT	| MUX_PAD_CTRL(0x1d0),
+	IMX8MN_PAD_SD2_CLK__USDHC2_CLK			| MUX_PAD_CTRL(0x094),
+	IMX8MN_PAD_SD2_CMD__USDHC2_CMD			| MUX_PAD_CTRL(0x0d0),
+	IMX8MN_PAD_SD2_DATA0__USDHC2_DATA0		| MUX_PAD_CTRL(0x0d0),
+	IMX8MN_PAD_SD2_DATA1__USDHC2_DATA1		| MUX_PAD_CTRL(0x0d0),
+	IMX8MN_PAD_SD2_DATA2__USDHC2_DATA2		| MUX_PAD_CTRL(0x0d0),
+	IMX8MN_PAD_SD2_DATA3__USDHC2_DATA3		| MUX_PAD_CTRL(0x0d0),
+
+	/* USDHC3 */
+	IMX8MN_PAD_NAND_WE_B__USDHC3_CLK		| MUX_PAD_CTRL(0x190),
+	IMX8MN_PAD_NAND_WP_B__USDHC3_CMD		| MUX_PAD_CTRL(0x1d0),
+	IMX8MN_PAD_NAND_DATA04__USDHC3_DATA0	| MUX_PAD_CTRL(0x1d0),
+	IMX8MN_PAD_NAND_DATA05__USDHC3_DATA1	| MUX_PAD_CTRL(0x1d0),
+	IMX8MN_PAD_NAND_DATA06__USDHC3_DATA2	| MUX_PAD_CTRL(0x1d0),
+	IMX8MN_PAD_NAND_DATA07__USDHC3_DATA3	| MUX_PAD_CTRL(0x1d0),
+	IMX8MN_PAD_NAND_RE_B__USDHC3_DATA4		| MUX_PAD_CTRL(0x1d0),
+	IMX8MN_PAD_NAND_CE2_B__USDHC3_DATA5		| MUX_PAD_CTRL(0x1d0),
+	IMX8MN_PAD_NAND_CE3_B__USDHC3_DATA6		| MUX_PAD_CTRL(0x1d0),
+	IMX8MN_PAD_NAND_CLE__USDHC3_DATA7		| MUX_PAD_CTRL(0x1d0),
+	IMX8MN_PAD_NAND_CE1_B__USDHC3_STROBE	| MUX_PAD_CTRL(0x190),
+
+	/* WDDOG */
+	IMX8MN_PAD_GPIO1_IO02__WDOG1_WDOG_B		| MUX_PAD_CTRL(0x0c6),
+
+	/* GPIO */
+	IMX8MN_PAD_GPIO1_IO03__GPIO1_IO3		| MUX_PAD_CTRL(0x016),	/* PMIC_NINT       */
+	IMX8MN_PAD_GPIO1_IO05__GPIO1_IO5		| MUX_PAD_CTRL(0x100),	/* NC              */
+	IMX8MN_PAD_GPIO1_IO08__GPIO1_IO8		| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_GPIO1_IO09__GPIO1_IO9		| MUX_PAD_CTRL(0x019),	/* Secure IC PWRDOWN_EN(JP選択、Default=未使用) */
+	IMX8MN_PAD_GPIO1_IO10__GPIO1_IO10		| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_ENET_TXC__GPIO1_IO23			| MUX_PAD_CTRL(0x056),	/* ENET_INTR/PWRDN */
+	IMX8MN_PAD_SD1_DATA4__GPIO2_IO6			| MUX_PAD_CTRL(0x016),	/* DIP SW          */
+	IMX8MN_PAD_SD1_DATA5__GPIO2_IO7			| MUX_PAD_CTRL(0x016),	/* DIP SW          */
+	IMX8MN_PAD_SD1_DATA6__GPIO2_IO8			| MUX_PAD_CTRL(0x016),	/* DIP SW          */
+	IMX8MN_PAD_SD1_RESET_B__GPIO2_IO10		| MUX_PAD_CTRL(0x016),	/* DIP SW          */
+	IMX8MN_PAD_SD2_CD_B__GPIO2_IO12			| MUX_PAD_CTRL(0x016),	/* SD2_Detect      */
+	IMX8MN_PAD_SD2_RESET_B__GPIO2_IO19		| MUX_PAD_CTRL(0x041),	/* SD2_NRST        */
+	IMX8MN_PAD_NAND_READY_B__GPIO3_IO16		| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_SAI5_RXFS__GPIO3_IO19		| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_SAI5_RXD1__GPIO3_IO22		| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_SAI5_RXD2__GPIO3_IO23		| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_SAI5_RXD3__GPIO3_IO24		| MUX_PAD_CTRL(0x006),	/* SOC_PRST        */
+	IMX8MN_PAD_SAI5_MCLK__GPIO3_IO25		| MUX_PAD_CTRL(0x019),	/* SYS_STATUS LED  */
+	IMX8MN_PAD_SAI2_RXC__GPIO4_IO22			| MUX_PAD_CTRL(0x056),	/* ENET_nRST       */
+	IMX8MN_PAD_SAI2_MCLK__GPIO4_IO27		| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_ECSPI2_MISO__GPIO5_IO12		| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_ECSPI2_SS0__GPIO5_IO13		| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_UART4_RXD__GPIO5_IO28		| MUX_PAD_CTRL(0x040),	/* CPU間通信用     */
+	IMX8MN_PAD_UART4_TXD__GPIO5_IO29		| MUX_PAD_CTRL(0x040),	/* MCU_RST         */
+
+#if defined(CONFIG_TARGET_IMX8MN_PEW_MON)
+
+	/* I2C3 */
+	IMX8MN_PAD_I2C3_SCL__I2C3_SCL			| MUX_PAD_CTRL(0x0c3),
+	IMX8MN_PAD_I2C3_SDA__I2C3_SDA			| MUX_PAD_CTRL(0x0c3),
+
+	/* UART1 */
+	IMX8MN_PAD_UART1_RXD__UART1_DCE_RX		| MUX_PAD_CTRL(0x040),
+	IMX8MN_PAD_UART1_TXD__UART1_DCE_TX		| MUX_PAD_CTRL(0x040),
+	IMX8MN_PAD_UART3_RXD__UART1_DCE_CTS_B	| MUX_PAD_CTRL(0x040),
+	IMX8MN_PAD_UART3_TXD__UART1_DCE_RTS_B	| MUX_PAD_CTRL(0x040),
+
+	/* USDHC1 */
+	IMX8MN_PAD_SD1_CLK__USDHC1_CLK			| MUX_PAD_CTRL(0x196),
+	IMX8MN_PAD_SD1_CMD__USDHC1_CMD			| MUX_PAD_CTRL(0x096),
+	IMX8MN_PAD_SD1_DATA0__USDHC1_DATA0		| MUX_PAD_CTRL(0x096),
+	IMX8MN_PAD_SD1_DATA1__USDHC1_DATA1		| MUX_PAD_CTRL(0x096),
+	IMX8MN_PAD_SD1_DATA2__USDHC1_DATA2		| MUX_PAD_CTRL(0x096),
+	IMX8MN_PAD_SD1_DATA3__USDHC1_DATA3		| MUX_PAD_CTRL(0x096),
+
+	/* SAI2 */
+	IMX8MN_PAD_SAI2_RXD0__SAI2_RX_DATA0		| MUX_PAD_CTRL(0x116),
+	IMX8MN_PAD_SAI2_TXFS__SAI2_TX_SYNC		| MUX_PAD_CTRL(0x116),
+	IMX8MN_PAD_SAI2_TXC__SAI2_TX_BCLK		| MUX_PAD_CTRL(0x116),
+	IMX8MN_PAD_SAI2_TXD0__SAI2_TX_DATA0		| MUX_PAD_CTRL(0x116),
+
+	/* SAI3 */
+	IMX8MN_PAD_SAI3_RXD__SAI3_RX_DATA0		| MUX_PAD_CTRL(0x116),
+	IMX8MN_PAD_SAI3_TXFS__SAI3_TX_SYNC		| MUX_PAD_CTRL(0x116),
+	IMX8MN_PAD_SAI3_TXC__SAI3_TX_BCLK		| MUX_PAD_CTRL(0x116),
+	IMX8MN_PAD_SAI3_TXD__SAI3_TX_DATA0		| MUX_PAD_CTRL(0x116),
+	IMX8MN_PAD_SAI3_MCLK__SAI3_MCLK			| MUX_PAD_CTRL(0x116),
+
+	/* PWM(LCM backlight) */
+	IMX8MN_PAD_GPIO1_IO13__PWM2_OUT			| MUX_PAD_CTRL(0x016),
+
+	/* GPIO */
+	IMX8MN_PAD_GPIO1_IO00__GPIO1_IO0		| MUX_PAD_CTRL(0x116),	/* REF_CLK_32K     */
+	IMX8MN_PAD_GPIO1_IO01__GPIO1_IO1		| MUX_PAD_CTRL(0x116),	/* WIFIBT_PMIC_EN  */
+	IMX8MN_PAD_GPIO1_IO06__GPIO1_IO6		| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_GPIO1_IO07__GPIO1_IO7		| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_GPIO1_IO11__GPIO1_IO11		| MUX_PAD_CTRL(0x016),	/* NC              */
+	IMX8MN_PAD_GPIO1_IO12__GPIO1_IO12		| MUX_PAD_CTRL(0x016),	/* NC              */
+	IMX8MN_PAD_GPIO1_IO14__GPIO1_IO14		| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_GPIO1_IO15__GPIO1_IO15		| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_ENET_TD3__GPIO1_IO18			| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_ENET_RXC__GPIO1_IO25			| MUX_PAD_CTRL(0x016),	/* LCD PWR ON      */
+	IMX8MN_PAD_ENET_RD2__GPIO1_IO28			| MUX_PAD_CTRL(0x016),	/* NC              */
+	IMX8MN_PAD_ENET_RD3__GPIO1_IO29			| MUX_PAD_CTRL(0x016),	/* NC              */
+	IMX8MN_PAD_SD1_DATA7__GPIO2_IO9			| MUX_PAD_CTRL(0x016),	/* LCD RESET       */
+	IMX8MN_PAD_SD1_STROBE__GPIO2_IO11		| MUX_PAD_CTRL(0x016),	/* LCD STBYBT      */
+	IMX8MN_PAD_SD2_WP__GPIO2_IO20			| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_NAND_ALE__GPIO3_IO0			| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_NAND_CE0_B__GPIO3_IO1		| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_NAND_DATA00__GPIO3_IO6		| MUX_PAD_CTRL(0x156),	/* NC              */
+	IMX8MN_PAD_NAND_DATA01__GPIO3_IO7		| MUX_PAD_CTRL(0x156),	/* NC              */
+	IMX8MN_PAD_NAND_DATA02__GPIO3_IO8		| MUX_PAD_CTRL(0x156),	/* NC              */
+	IMX8MN_PAD_NAND_DATA03__GPIO3_IO9		| MUX_PAD_CTRL(0x156),	/* NC              */
+	IMX8MN_PAD_NAND_DQS__GPIO3_IO14			| MUX_PAD_CTRL(0x016),	/* NC              */
+	IMX8MN_PAD_SAI5_RXC__GPIO3_IO20			| MUX_PAD_CTRL(0x116),	/* LCD 電源IC FLTB */
+	IMX8MN_PAD_SAI5_RXD0__GPIO3_IO21		| MUX_PAD_CTRL(0x116),	/* TP Ctrlリセット */
+	IMX8MN_PAD_SAI2_RXFS__GPIO4_IO21		| MUX_PAD_CTRL(0x016),	/* NC              */
+	IMX8MN_PAD_SAI3_RXFS__GPIO4_IO28		| MUX_PAD_CTRL(0x116),	/* HOST_WAKE_BT    */
+	IMX8MN_PAD_SAI3_RXC__GPIO4_IO29			| MUX_PAD_CTRL(0x116),	/* BT_WAKE_HOST    */
+	IMX8MN_PAD_SPDIF_TX__GPIO5_IO3			| MUX_PAD_CTRL(0x116),	/* HOST_WAKE_WLAN  */
+	IMX8MN_PAD_SPDIF_RX__GPIO5_IO4			| MUX_PAD_CTRL(0x116),	/* WL_WAKE_HOST    */
+	IMX8MN_PAD_SPDIF_EXT_CLK__GPIO5_IO5		| MUX_PAD_CTRL(0x116),	/* Codec PDN       */
+
+#elif defined(CONFIG_TARGET_IMX8MN_PEW_GW)
+
+	/* UART1 */
+	IMX8MN_PAD_UART1_RXD__UART1_DCE_RX		| MUX_PAD_CTRL(0x040),
+	IMX8MN_PAD_UART1_TXD__UART1_DCE_TX		| MUX_PAD_CTRL(0x040),
+	IMX8MN_PAD_UART3_RXD__UART1_DCE_CTS_B	| MUX_PAD_CTRL(0x040),
+	IMX8MN_PAD_UART3_TXD__UART1_DCE_RTS_B	| MUX_PAD_CTRL(0x040),
+
+	/* USDHC1 */
+	IMX8MN_PAD_SD1_CLK__USDHC1_CLK			| MUX_PAD_CTRL(0x196),
+	IMX8MN_PAD_SD1_CMD__USDHC1_CMD			| MUX_PAD_CTRL(0x096),
+	IMX8MN_PAD_SD1_DATA0__USDHC1_DATA0		| MUX_PAD_CTRL(0x096),
+	IMX8MN_PAD_SD1_DATA1__USDHC1_DATA1		| MUX_PAD_CTRL(0x096),
+	IMX8MN_PAD_SD1_DATA2__USDHC1_DATA2		| MUX_PAD_CTRL(0x096),
+	IMX8MN_PAD_SD1_DATA3__USDHC1_DATA3		| MUX_PAD_CTRL(0x096),
+
+	/* SAI2 */
+	IMX8MN_PAD_SAI2_RXD0__SAI2_RX_DATA0		| MUX_PAD_CTRL(0x116),
+	IMX8MN_PAD_SAI2_TXC__SAI2_TX_BCLK		| MUX_PAD_CTRL(0x116),
+	IMX8MN_PAD_SAI2_TXFS__SAI2_TX_SYNC		| MUX_PAD_CTRL(0x116),
+	IMX8MN_PAD_SAI2_TXD0__SAI2_TX_DATA0		| MUX_PAD_CTRL(0x116),
+
+	/* SAI3 */
+	IMX8MN_PAD_SAI3_RXD__SAI3_RX_DATA0		| MUX_PAD_CTRL(0x116),
+	IMX8MN_PAD_SAI3_TXFS__SAI3_TX_SYNC		| MUX_PAD_CTRL(0x116),
+	IMX8MN_PAD_SAI3_TXC__SAI3_TX_BCLK		| MUX_PAD_CTRL(0x116),
+	IMX8MN_PAD_SAI3_TXD__SAI3_TX_DATA0		| MUX_PAD_CTRL(0x116),
+	IMX8MN_PAD_SAI3_MCLK__SAI3_MCLK			| MUX_PAD_CTRL(0x116),
+
+	/* GPIO */
+	IMX8MN_PAD_GPIO1_IO00__GPIO1_IO0		| MUX_PAD_CTRL(0x116),	/* REF_CLK_32K     */
+	IMX8MN_PAD_GPIO1_IO01__GPIO1_IO1		| MUX_PAD_CTRL(0x116),	/* WIFIBT_PMIC_EN  */
+	IMX8MN_PAD_GPIO1_IO06__GPIO1_IO6		| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_GPIO1_IO07__GPIO1_IO7		| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_GPIO1_IO11__GPIO1_IO11		| MUX_PAD_CTRL(0x016),	/* NC              */
+	IMX8MN_PAD_GPIO1_IO12__GPIO1_IO12		| MUX_PAD_CTRL(0x016),	/* NC              */
+	IMX8MN_PAD_GPIO1_IO13__GPIO1_IO13		| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_GPIO1_IO14__GPIO1_IO14		| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_GPIO1_IO15__GPIO1_IO15		| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_ENET_TD3__GPIO1_IO18			| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_ENET_RXC__GPIO1_IO25			| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_ENET_RD2__GPIO1_IO28			| MUX_PAD_CTRL(0x016),	/* NC              */
+	IMX8MN_PAD_ENET_RD3__GPIO1_IO29			| MUX_PAD_CTRL(0x016),	/* NC              */
+	IMX8MN_PAD_SD1_DATA7__GPIO2_IO9			| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_SD1_STROBE__GPIO2_IO11		| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_SD2_WP__GPIO2_IO20			| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_NAND_ALE__GPIO3_IO0			| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_NAND_CE0_B__GPIO3_IO1		| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_NAND_DATA00__GPIO3_IO6		| MUX_PAD_CTRL(0x156),	/* NC              */
+	IMX8MN_PAD_NAND_DATA01__GPIO3_IO7		| MUX_PAD_CTRL(0x156),	/* NC              */
+	IMX8MN_PAD_NAND_DATA02__GPIO3_IO8		| MUX_PAD_CTRL(0x156),	/* NC              */
+	IMX8MN_PAD_NAND_DATA03__GPIO3_IO9		| MUX_PAD_CTRL(0x156),	/* NC              */
+	IMX8MN_PAD_NAND_DQS__GPIO3_IO14			| MUX_PAD_CTRL(0x016),	/* NC              */
+	IMX8MN_PAD_SAI5_RXC__GPIO3_IO20			| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_SAI5_RXD0__GPIO3_IO21		| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_SAI2_RXFS__GPIO4_IO21		| MUX_PAD_CTRL(0x016),	/* NC              */
+	IMX8MN_PAD_SAI3_RXFS__GPIO4_IO28		| MUX_PAD_CTRL(0x116),	/* HOST_WAKE_BT    */
+	IMX8MN_PAD_SAI3_RXC__GPIO4_IO29			| MUX_PAD_CTRL(0x116),	/* BT_WAKE_HOST    */
+	IMX8MN_PAD_SPDIF_TX__GPIO5_IO3			| MUX_PAD_CTRL(0x116),	/* HOST_WAKE_WLAN  */
+	IMX8MN_PAD_SPDIF_RX__GPIO5_IO4			| MUX_PAD_CTRL(0x116),	/* WL_WAKE_HOST    */
+	IMX8MN_PAD_SPDIF_EXT_CLK__GPIO5_IO5		| MUX_PAD_CTRL(0x116),	/* Codec PDN       */
+	IMX8MN_PAD_I2C3_SCL__GPIO5_IO18			| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_I2C3_SDA__GPIO5_IO19			| MUX_PAD_CTRL(0x116),	/* NC              */
+
+#elif defined(CONFIG_TARGET_IMX8MN_PEW_BIZGW)
+
+	/* GPIO */
+	IMX8MN_PAD_GPIO1_IO00__GPIO1_IO0		| MUX_PAD_CTRL(0x100),	/* NC              */
+	IMX8MN_PAD_GPIO1_IO01__GPIO1_IO1		| MUX_PAD_CTRL(0x100),	/* NC              */
+	IMX8MN_PAD_GPIO1_IO06__GPIO1_IO6		| MUX_PAD_CTRL(0x016),	/* RS485 ch1 LED   */
+	IMX8MN_PAD_GPIO1_IO07__GPIO1_IO7		| MUX_PAD_CTRL(0x016),	/* RS485 ch2 LED   */
+	IMX8MN_PAD_GPIO1_IO11__GPIO1_IO11		| MUX_PAD_CTRL(0x016),	/* RS485#A MCU_RESET_B */
+	IMX8MN_PAD_GPIO1_IO12__GPIO1_IO12		| MUX_PAD_CTRL(0x016),	/* RS485#A IRQ     */
+	IMX8MN_PAD_GPIO1_IO13__GPIO1_IO13		| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_GPIO1_IO14__GPIO1_IO14		| MUX_PAD_CTRL(0x016),	/* LTE ch1 LED     */
+	IMX8MN_PAD_GPIO1_IO15__GPIO1_IO15		| MUX_PAD_CTRL(0x016),	/* LTE ch2 LED     */
+	IMX8MN_PAD_ENET_TD3__GPIO1_IO18			| MUX_PAD_CTRL(0x016),	/* サーバー状態LED */
+	IMX8MN_PAD_ENET_RXC__GPIO1_IO25			| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_ENET_RD2__GPIO1_IO28			| MUX_PAD_CTRL(0x016),	/* RS485#B MCU_RESET_B */
+	IMX8MN_PAD_ENET_RD3__GPIO1_IO29			| MUX_PAD_CTRL(0x016),	/* RS485#B IRQ     */
+	IMX8MN_PAD_SD1_CLK__GPIO2_IO0			| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_SD1_CMD__GPIO2_IO1			| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_SD1_DATA0__GPIO2_IO2			| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_SD1_DATA1__GPIO2_IO3			| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_SD1_DATA2__GPIO2_IO4			| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_SD1_DATA3__GPIO2_IO5			| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_SD1_DATA7__GPIO2_IO9			| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_SD1_STROBE__GPIO2_IO11		| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_SD2_WP__GPIO2_IO20			| MUX_PAD_CTRL(0x116),	/* 予備LED         */
+	IMX8MN_PAD_NAND_ALE__GPIO3_IO0			| MUX_PAD_CTRL(0x016),	/* LTE RESET_N     */
+	IMX8MN_PAD_NAND_CE0_B__GPIO3_IO1		| MUX_PAD_CTRL(0x016),	/* LTE_PWRKEY      */
+	IMX8MN_PAD_NAND_DATA00__GPIO3_IO6		| MUX_PAD_CTRL(0x156),	/* LTE_STATUS      */
+	IMX8MN_PAD_NAND_DATA01__GPIO3_IO7		| MUX_PAD_CTRL(0x156),	/* LTE_WAKEUP_IN   */
+	IMX8MN_PAD_NAND_DATA02__GPIO3_IO8		| MUX_PAD_CTRL(0x156),	/* LTE_AP_READY    */
+	IMX8MN_PAD_NAND_DATA03__GPIO3_IO9		| MUX_PAD_CTRL(0x156),	/* LTE_W_DISABLE   */
+	IMX8MN_PAD_NAND_DQS__GPIO3_IO14			| MUX_PAD_CTRL(0x016),	/* LTE_RI          */
+	IMX8MN_PAD_SAI5_RXC__GPIO3_IO20			| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_SAI5_RXD0__GPIO3_IO21		| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_SAI2_RXFS__GPIO4_IO21		| MUX_PAD_CTRL(0x016),	/* LTE USB-HiSideSW*/
+	IMX8MN_PAD_SAI2_RXD0__GPIO4_IO23		| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_SAI2_TXFS__GPIO4_IO24		| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_SAI2_TXC__GPIO4_IO25			| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_SAI2_TXD0__GPIO4_IO26		| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_SAI3_RXFS__GPIO4_IO28		| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_SAI3_RXC__GPIO4_IO29			| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_SAI3_RXD__GPIO4_IO30			| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_SAI3_TXFS__GPIO4_IO31		| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_SAI3_TXC__GPIO5_IO0			| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_SAI3_TXD__GPIO5_IO1			| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_SAI3_MCLK__GPIO5_IO2			| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_SPDIF_TX__GPIO5_IO3			| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_SPDIF_RX__GPIO5_IO4			| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_SPDIF_EXT_CLK__GPIO5_IO5		| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_I2C3_SCL__GPIO5_IO18			| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_I2C3_SDA__GPIO5_IO19			| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_UART1_RXD__GPIO5_IO22		| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_UART1_TXD__GPIO5_IO23		| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_UART3_RXD__GPIO5_IO26		| MUX_PAD_CTRL(0x116),	/* NC              */
+	IMX8MN_PAD_UART3_TXD__GPIO5_IO27		| MUX_PAD_CTRL(0x116),	/* NC              */
+
+#else
+#error "Not suppoert target board"
+#endif
+};
+
+static void gpio_first_init(void)
+{
+	int i;
+	void *base_addr[5] = {(void *)GPIO1_BASE_ADDR,
+						  (void *)GPIO2_BASE_ADDR,
+						  (void *)GPIO3_BASE_ADDR,
+						  (void *)GPIO4_BASE_ADDR,
+						  (void *)GPIO5_BASE_ADDR};
+
+	for (i=0; i<sizeof(base_addr)/sizeof(base_addr[0]); i++) {
+		*((u32 *)(base_addr[i] + 0x00)) = 0x00000000;	/* DR   */
+		*((u32 *)(base_addr[i] + 0x04)) = 0x00000000;	/* GDIR */
+		*((u32 *)(base_addr[i] + 0x0c)) = 0x00000000;	/* ICR1 */
+		*((u32 *)(base_addr[i] + 0x10)) = 0x00000000;	/* ICR2 */
+		*((u32 *)(base_addr[i] + 0x14)) = 0x00000000;	/* IMR  */
+		*((u32 *)(base_addr[i] + 0x1c)) = 0x00000000;	/* EDGE SEL */
+	}
+}
+#endif //CONFIG_SPL_BUILD
+
+int board_early_init_f(void)
+{
+	gd->flags |= GD_FLG_DISABLE_CONSOLE;
+	struct wdog_regs *wdog = (struct wdog_regs *)WDOG1_BASE_ADDR;
+
+#ifdef CONFIG_SPL_BUILD
+	/* IOMUXの初期値の設定 */
+	/* Device Treeに記載したpinctrlは、ドライバ機能の呼び出し時に、*/
+	/* 対象ドライバに関係づけられたpinctrlのみ設定が行われる。     */
+	/* (ドライバが利用されなければ設定されない。)                  */
+	/* このため、全pinに対する初期化をここで行う。                 */
+	imx_iomux_v3_setup_multiple_pads(iomux_pads, ARRAY_SIZE(iomux_pads));
+
+	/* GPIOの初期化 */
+	gpio_first_init();
+#endif //CONFIG_SPL_BUILD
+
+	set_wdog_reset(wdog);
+
+	init_uart_clk(1);
+
+	return 0;
+}
+
+int board_init(void)
+{
+	return 0;
+}
+
+int board_late_init(void)
+{
+#ifdef CONFIG_ENV_IS_IN_MMC
+	board_late_mmc_env_init();
+#endif
+
+#ifdef CONFIG_ENV_VARS_UBOOT_RUNTIME_CONFIG
+#if defined(CONFIG_TARGET_IMX8MN_PEW_MON)
+	env_set("board_name", "PEW-NXGW-MON");
+#elif defined(CONFIG_TARGET_IMX8MN_PEW_GW)
+	env_set("board_name", "PEW-NXGW-GW");
+#elif defined(CONFIG_TARGET_IMX8MN_PEW_BIZGW)
+	env_set("board_name", "PEW-NXGW-BIZGW");
+#endif
+	env_set("board_rev", "iMX8MN");
+#endif
+
+	char *cmd, *env;
+	cmd = env_get("debug_console_check");
+	if (cmd) {
+		run_command(cmd, 0);
+		env = env_get("debug_console");
+		if (env) {
+			gd->flags &= ~GD_FLG_DISABLE_CONSOLE;
+		}
+	}
+
+	return 0;
+}
+
diff --git a/board/freescale/imx8mn_pew/imximage-8mn-ddr4.cfg b/board/freescale/imx8mn_pew/imximage-8mn-ddr4.cfg
new file mode 100644
index 00000000..0edda9c5
--- /dev/null
+++ b/board/freescale/imx8mn_pew/imximage-8mn-ddr4.cfg
@@ -0,0 +1,9 @@
+/* SPDX-License-Identifier: GPL-2.0+ */
+/*
+ * Copyright 2021 NXP
+ */
+
+
+ROM_VERSION	v2
+BOOT_FROM	sd
+LOADER		u-boot-spl-ddr.bin	0x912000
diff --git a/board/freescale/imx8mn_pew/lpddr4_timing.c b/board/freescale/imx8mn_pew/lpddr4_timing.c
new file mode 100644
index 00000000..aa029dde
--- /dev/null
+++ b/board/freescale/imx8mn_pew/lpddr4_timing.c
@@ -0,0 +1,1449 @@
+/*
+ * Copyright 2019 NXP
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ *
+ * Generated code from MX8M_DDR_tool
+ *
+ * Align with uboot version:
+ * imx_v2019.04_5.4.x and above version
+ * For imx_v2018.03_4.14.78_1.0.0_ga ~ imx_v2018.04_4.19.35_1.1.0_ga:
+ * please replace #include <asm/arch/ddr.h> with #include <asm/arch/imx8m_ddr.h>
+ */
+
+#include <linux/kernel.h>
+#include <asm/arch/ddr.h>
+
+struct dram_cfg_param ddr_ddrc_cfg[] = {
+	/** Initialize DDRC registers **/
+	{ 0x3d400304, 0x1 },
+	{ 0x3d400030, 0x1 },
+	{ 0x3d400000, 0xa1080020 },
+	{ 0x3d400020, 0x213 },
+	{ 0x3d400024, 0x3e800 },
+	{ 0x3d400064, 0x610090 },
+	{ 0x3d4000d0, 0xc003061c },
+	{ 0x3d4000d4, 0x9e0000 },
+	{ 0x3d4000dc, 0xd4002d },
+	{ 0x3d4000e0, 0x310000 },
+	{ 0x3d4000e8, 0x66004d },
+	{ 0x3d4000ec, 0x14004d },
+	{ 0x3d400100, 0x1a201b22 },
+	{ 0x3d400104, 0x60633 },
+	{ 0x3d40010c, 0xc0c000 },
+	{ 0x3d400110, 0xf04080f },
+	{ 0x3d400114, 0x2040c0c },
+	{ 0x3d400118, 0x1010007 },
+	{ 0x3d40011c, 0x402 },
+	{ 0x3d400130, 0x20600 },
+	{ 0x3d400134, 0xc100002 },
+	{ 0x3d400138, 0x96 },
+	{ 0x3d400144, 0xa00050 },
+	{ 0x3d400180, 0x3200018 },
+	{ 0x3d400184, 0x28061a8 },
+	{ 0x3d400188, 0x0 },
+	{ 0x3d400190, 0x497820a },
+	{ 0x3d400194, 0x80303 },
+	{ 0x3d4001b4, 0x170a },
+	{ 0x3d4001a0, 0xe0400018 },
+	{ 0x3d4001a4, 0xdf00e4 },
+	{ 0x3d4001a8, 0x80000000 },
+	{ 0x3d4001b0, 0x11 },
+	{ 0x3d4001c0, 0x1 },
+	{ 0x3d4001c4, 0x1 },
+	{ 0x3d4000f4, 0x6c9 },
+	{ 0x3d400108, 0x70e1617 },
+	{ 0x3d400200, 0x1f },
+	{ 0x3d40020c, 0x0 },
+	{ 0x3d400210, 0x1f1f },
+	{ 0x3d400204, 0x80808 },
+	{ 0x3d400214, 0x7070707 },
+	{ 0x3d400218, 0xf070707 },
+	{ 0x3d40021c, 0xf0f },
+	{ 0x3d400250, 0x29001701 },
+	{ 0x3d400254, 0x2c },
+	{ 0x3d40025c, 0x4000030 },
+	{ 0x3d400264, 0x900093e7 },
+	{ 0x3d40026c, 0x2005574 },
+	{ 0x3d400400, 0x111 },
+	{ 0x3d400408, 0x72ff },
+	{ 0x3d400494, 0x2100e07 },
+	{ 0x3d400498, 0x620096 },
+	{ 0x3d40049c, 0x1100e07 },
+	{ 0x3d4004a0, 0xc8012c },
+	{ 0x3d402020, 0x11 },
+	{ 0x3d402024, 0x7d00 },
+	{ 0x3d402050, 0x20d040 },
+	{ 0x3d402064, 0xc0012 },
+	{ 0x3d4020dc, 0x840000 },
+	{ 0x3d4020e0, 0x310000 },
+	{ 0x3d4020e8, 0x66004d },
+	{ 0x3d4020ec, 0x16004d },
+	{ 0x3d402100, 0xa040305 },
+	{ 0x3d402104, 0x30407 },
+	{ 0x3d402108, 0x203060b },
+	{ 0x3d40210c, 0x505000 },
+	{ 0x3d402110, 0x2040202 },
+	{ 0x3d402114, 0x2030202 },
+	{ 0x3d402118, 0x1010004 },
+	{ 0x3d40211c, 0x302 },
+	{ 0x3d402130, 0x20300 },
+	{ 0x3d402134, 0xa100002 },
+	{ 0x3d402138, 0x13 },
+	{ 0x3d402144, 0x14000a },
+	{ 0x3d402180, 0x640004 },
+	{ 0x3d402190, 0x3818200 },
+	{ 0x3d402194, 0x80303 },
+	{ 0x3d4021b4, 0x100 },
+	{ 0x3d4020f4, 0x599 },
+	{ 0x3d403020, 0x11 },
+	{ 0x3d403024, 0x1f40 },
+	{ 0x3d403050, 0x20d040 },
+	{ 0x3d403064, 0x30005 },
+	{ 0x3d4030dc, 0x840000 },
+	{ 0x3d4030e0, 0x310000 },
+	{ 0x3d4030e8, 0x66004d },
+	{ 0x3d4030ec, 0x16004d },
+	{ 0x3d403100, 0xa010102 },
+	{ 0x3d403104, 0x30404 },
+	{ 0x3d403108, 0x203060b },
+	{ 0x3d40310c, 0x505000 },
+	{ 0x3d403110, 0x2040202 },
+	{ 0x3d403114, 0x2030202 },
+	{ 0x3d403118, 0x1010004 },
+	{ 0x3d40311c, 0x302 },
+	{ 0x3d403130, 0x20300 },
+	{ 0x3d403134, 0xa100002 },
+	{ 0x3d403138, 0x5 },
+	{ 0x3d403144, 0x50003 },
+	{ 0x3d403180, 0x190004 },
+	{ 0x3d403190, 0x3818200 },
+	{ 0x3d403194, 0x80303 },
+	{ 0x3d4031b4, 0x100 },
+	{ 0x3d4030f4, 0x599 },
+	{ 0x3d400028, 0x0 },
+};
+
+/* PHY Initialize Configuration */
+struct dram_cfg_param ddr_ddrphy_cfg[] = {
+	{ 0x100a0, 0x6 },
+	{ 0x100a1, 0x1 },
+	{ 0x100a2, 0x2 },
+	{ 0x100a3, 0x3 },
+	{ 0x100a4, 0x4 },
+	{ 0x100a5, 0x5 },
+	{ 0x100a6, 0x7 },
+	{ 0x100a7, 0x0 },
+	{ 0x110a0, 0x6 },
+	{ 0x110a1, 0x1 },
+	{ 0x110a2, 0x3 },
+	{ 0x110a3, 0x4 },
+	{ 0x110a4, 0x5 },
+	{ 0x110a5, 0x2 },
+	{ 0x110a6, 0x0 },
+	{ 0x110a7, 0x7 },
+	{ 0x1005f, 0x1ff },
+	{ 0x1015f, 0x1ff },
+	{ 0x1105f, 0x1ff },
+	{ 0x1115f, 0x1ff },
+	{ 0x11005f, 0x1ff },
+	{ 0x11015f, 0x1ff },
+	{ 0x11105f, 0x1ff },
+	{ 0x11115f, 0x1ff },
+	{ 0x21005f, 0x1ff },
+	{ 0x21015f, 0x1ff },
+	{ 0x21105f, 0x1ff },
+	{ 0x21115f, 0x1ff },
+	{ 0x55, 0x1ff },
+	{ 0x1055, 0x1ff },
+	{ 0x2055, 0x1ff },
+	{ 0x3055, 0x1ff },
+	{ 0x4055, 0x1ff },
+	{ 0x5055, 0x1ff },
+	{ 0x6055, 0x1ff },
+	{ 0x7055, 0x1ff },
+	{ 0x8055, 0x1ff },
+	{ 0x9055, 0x1ff },
+	{ 0x200c5, 0x19 },
+	{ 0x1200c5, 0x7 },
+	{ 0x2200c5, 0x7 },
+	{ 0x2002e, 0x2 },
+	{ 0x12002e, 0x2 },
+	{ 0x22002e, 0x2 },
+	{ 0x90204, 0x0 },
+	{ 0x190204, 0x0 },
+	{ 0x290204, 0x0 },
+	{ 0x20024, 0x1a3 },
+	{ 0x2003a, 0x2 },
+	{ 0x120024, 0x1a3 },
+	{ 0x2003a, 0x2 },
+	{ 0x220024, 0x1a3 },
+	{ 0x2003a, 0x2 },
+	{ 0x20056, 0x3 },
+	{ 0x120056, 0x3 },
+	{ 0x220056, 0x3 },
+	{ 0x1004d, 0xe00 },
+	{ 0x1014d, 0xe00 },
+	{ 0x1104d, 0xe00 },
+	{ 0x1114d, 0xe00 },
+	{ 0x11004d, 0xe00 },
+	{ 0x11014d, 0xe00 },
+	{ 0x11104d, 0xe00 },
+	{ 0x11114d, 0xe00 },
+	{ 0x21004d, 0xe00 },
+	{ 0x21014d, 0xe00 },
+	{ 0x21104d, 0xe00 },
+	{ 0x21114d, 0xe00 },
+	{ 0x10049, 0xe38 },
+	{ 0x10149, 0xe38 },
+	{ 0x11049, 0xe38 },
+	{ 0x11149, 0xe38 },
+	{ 0x110049, 0xe38 },
+	{ 0x110149, 0xe38 },
+	{ 0x111049, 0xe38 },
+	{ 0x111149, 0xe38 },
+	{ 0x210049, 0xe38 },
+	{ 0x210149, 0xe38 },
+	{ 0x211049, 0xe38 },
+	{ 0x211149, 0xe38 },
+	{ 0x43, 0x63 },
+	{ 0x1043, 0x63 },
+	{ 0x2043, 0x63 },
+	{ 0x3043, 0x63 },
+	{ 0x4043, 0x63 },
+	{ 0x5043, 0x63 },
+	{ 0x6043, 0x63 },
+	{ 0x7043, 0x63 },
+	{ 0x8043, 0x63 },
+	{ 0x9043, 0x63 },
+	{ 0x20018, 0x1 },
+	{ 0x20075, 0x4 },
+	{ 0x20050, 0x0 },
+	{ 0x20008, 0x320 },
+	{ 0x120008, 0x64 },
+	{ 0x220008, 0x19 },
+	{ 0x20088, 0x9 },
+	{ 0x200b2, 0xdc },
+	{ 0x10043, 0x5a1 },
+	{ 0x10143, 0x5a1 },
+	{ 0x11043, 0x5a1 },
+	{ 0x11143, 0x5a1 },
+	{ 0x1200b2, 0xdc },
+	{ 0x110043, 0x5a1 },
+	{ 0x110143, 0x5a1 },
+	{ 0x111043, 0x5a1 },
+	{ 0x111143, 0x5a1 },
+	{ 0x2200b2, 0xdc },
+	{ 0x210043, 0x5a1 },
+	{ 0x210143, 0x5a1 },
+	{ 0x211043, 0x5a1 },
+	{ 0x211143, 0x5a1 },
+	{ 0x200fa, 0x1 },
+	{ 0x1200fa, 0x1 },
+	{ 0x2200fa, 0x1 },
+	{ 0x20019, 0x1 },
+	{ 0x120019, 0x1 },
+	{ 0x220019, 0x1 },
+	{ 0x200f0, 0x660 },
+	{ 0x200f1, 0x0 },
+	{ 0x200f2, 0x4444 },
+	{ 0x200f3, 0x8888 },
+	{ 0x200f4, 0x5665 },
+	{ 0x200f5, 0x0 },
+	{ 0x200f6, 0x0 },
+	{ 0x200f7, 0xf000 },
+	{ 0x20025, 0x0 },
+	{ 0x2002d, 0x0 },
+	{ 0x12002d, 0x0 },
+	{ 0x22002d, 0x0 },
+	{ 0x2005b, 0x7529 },
+	{ 0x2005c, 0x0 },
+	{ 0x200c7, 0x21 },
+	{ 0x200ca, 0x24 },
+	{ 0x200cc, 0x1f7 },
+	{ 0x1200c7, 0x21 },
+	{ 0x1200ca, 0x24 },
+	{ 0x1200cc, 0x1f7 },
+	{ 0x2200c7, 0x21 },
+	{ 0x2200ca, 0x24 },
+	{ 0x2200cc, 0x1f7 },
+	{ 0x2007d, 0x212 },
+	{ 0x12007d, 0x212 },
+	{ 0x22007d, 0x212 },
+	{ 0x2007c, 0x61 },
+	{ 0x12007c, 0x61 },
+	{ 0x22007c, 0x61 },
+	{ 0x1004a, 0x500 },
+	{ 0x1104a, 0x500 },
+	{ 0x2002c, 0x0 },
+};
+
+/* ddr phy trained csr */
+struct dram_cfg_param ddr_ddrphy_trained_csr[] = {
+	{0x0200b2, 0x0},
+	{0x1200b2, 0x0},
+	{0x2200b2, 0x0},
+	{0x0200cb, 0x0},
+	{0x010043, 0x0},
+	{0x110043, 0x0},
+	{0x210043, 0x0},
+	{0x010143, 0x0},
+	{0x110143, 0x0},
+	{0x210143, 0x0},
+	{0x011043, 0x0},
+	{0x111043, 0x0},
+	{0x211043, 0x0},
+	{0x011143, 0x0},
+	{0x111143, 0x0},
+	{0x211143, 0x0},
+	{0x000080, 0x0},
+	{0x100080, 0x0},
+	{0x200080, 0x0},
+	{0x001080, 0x0},
+	{0x101080, 0x0},
+	{0x201080, 0x0},
+	{0x002080, 0x0},
+	{0x102080, 0x0},
+	{0x202080, 0x0},
+	{0x003080, 0x0},
+	{0x103080, 0x0},
+	{0x203080, 0x0},
+	{0x004080, 0x0},
+	{0x104080, 0x0},
+	{0x204080, 0x0},
+	{0x005080, 0x0},
+	{0x105080, 0x0},
+	{0x205080, 0x0},
+	{0x006080, 0x0},
+	{0x106080, 0x0},
+	{0x206080, 0x0},
+	{0x007080, 0x0},
+	{0x107080, 0x0},
+	{0x207080, 0x0},
+	{0x008080, 0x0},
+	{0x108080, 0x0},
+	{0x208080, 0x0},
+	{0x009080, 0x0},
+	{0x109080, 0x0},
+	{0x209080, 0x0},
+	{0x010080, 0x0},
+	{0x110080, 0x0},
+	{0x210080, 0x0},
+	{0x010180, 0x0},
+	{0x110180, 0x0},
+	{0x210180, 0x0},
+	{0x011080, 0x0},
+	{0x111080, 0x0},
+	{0x211080, 0x0},
+	{0x011180, 0x0},
+	{0x111180, 0x0},
+	{0x211180, 0x0},
+	{0x010081, 0x0},
+	{0x110081, 0x0},
+	{0x210081, 0x0},
+	{0x010181, 0x0},
+	{0x110181, 0x0},
+	{0x210181, 0x0},
+	{0x011081, 0x0},
+	{0x111081, 0x0},
+	{0x211081, 0x0},
+	{0x011181, 0x0},
+	{0x111181, 0x0},
+	{0x211181, 0x0},
+	{0x0100d0, 0x0},
+	{0x1100d0, 0x0},
+	{0x2100d0, 0x0},
+	{0x0101d0, 0x0},
+	{0x1101d0, 0x0},
+	{0x2101d0, 0x0},
+	{0x0110d0, 0x0},
+	{0x1110d0, 0x0},
+	{0x2110d0, 0x0},
+	{0x0111d0, 0x0},
+	{0x1111d0, 0x0},
+	{0x2111d0, 0x0},
+	{0x0100d1, 0x0},
+	{0x1100d1, 0x0},
+	{0x2100d1, 0x0},
+	{0x0101d1, 0x0},
+	{0x1101d1, 0x0},
+	{0x2101d1, 0x0},
+	{0x0110d1, 0x0},
+	{0x1110d1, 0x0},
+	{0x2110d1, 0x0},
+	{0x0111d1, 0x0},
+	{0x1111d1, 0x0},
+	{0x2111d1, 0x0},
+	{0x010068, 0x0},
+	{0x010168, 0x0},
+	{0x010268, 0x0},
+	{0x010368, 0x0},
+	{0x010468, 0x0},
+	{0x010568, 0x0},
+	{0x010668, 0x0},
+	{0x010768, 0x0},
+	{0x010868, 0x0},
+	{0x011068, 0x0},
+	{0x011168, 0x0},
+	{0x011268, 0x0},
+	{0x011368, 0x0},
+	{0x011468, 0x0},
+	{0x011568, 0x0},
+	{0x011668, 0x0},
+	{0x011768, 0x0},
+	{0x011868, 0x0},
+	{0x010069, 0x0},
+	{0x010169, 0x0},
+	{0x010269, 0x0},
+	{0x010369, 0x0},
+	{0x010469, 0x0},
+	{0x010569, 0x0},
+	{0x010669, 0x0},
+	{0x010769, 0x0},
+	{0x010869, 0x0},
+	{0x011069, 0x0},
+	{0x011169, 0x0},
+	{0x011269, 0x0},
+	{0x011369, 0x0},
+	{0x011469, 0x0},
+	{0x011569, 0x0},
+	{0x011669, 0x0},
+	{0x011769, 0x0},
+	{0x011869, 0x0},
+	{0x01008c, 0x0},
+	{0x11008c, 0x0},
+	{0x21008c, 0x0},
+	{0x01018c, 0x0},
+	{0x11018c, 0x0},
+	{0x21018c, 0x0},
+	{0x01108c, 0x0},
+	{0x11108c, 0x0},
+	{0x21108c, 0x0},
+	{0x01118c, 0x0},
+	{0x11118c, 0x0},
+	{0x21118c, 0x0},
+	{0x01008d, 0x0},
+	{0x11008d, 0x0},
+	{0x21008d, 0x0},
+	{0x01018d, 0x0},
+	{0x11018d, 0x0},
+	{0x21018d, 0x0},
+	{0x01108d, 0x0},
+	{0x11108d, 0x0},
+	{0x21108d, 0x0},
+	{0x01118d, 0x0},
+	{0x11118d, 0x0},
+	{0x21118d, 0x0},
+	{0x0100c0, 0x0},
+	{0x1100c0, 0x0},
+	{0x2100c0, 0x0},
+	{0x0101c0, 0x0},
+	{0x1101c0, 0x0},
+	{0x2101c0, 0x0},
+	{0x0102c0, 0x0},
+	{0x1102c0, 0x0},
+	{0x2102c0, 0x0},
+	{0x0103c0, 0x0},
+	{0x1103c0, 0x0},
+	{0x2103c0, 0x0},
+	{0x0104c0, 0x0},
+	{0x1104c0, 0x0},
+	{0x2104c0, 0x0},
+	{0x0105c0, 0x0},
+	{0x1105c0, 0x0},
+	{0x2105c0, 0x0},
+	{0x0106c0, 0x0},
+	{0x1106c0, 0x0},
+	{0x2106c0, 0x0},
+	{0x0107c0, 0x0},
+	{0x1107c0, 0x0},
+	{0x2107c0, 0x0},
+	{0x0108c0, 0x0},
+	{0x1108c0, 0x0},
+	{0x2108c0, 0x0},
+	{0x0110c0, 0x0},
+	{0x1110c0, 0x0},
+	{0x2110c0, 0x0},
+	{0x0111c0, 0x0},
+	{0x1111c0, 0x0},
+	{0x2111c0, 0x0},
+	{0x0112c0, 0x0},
+	{0x1112c0, 0x0},
+	{0x2112c0, 0x0},
+	{0x0113c0, 0x0},
+	{0x1113c0, 0x0},
+	{0x2113c0, 0x0},
+	{0x0114c0, 0x0},
+	{0x1114c0, 0x0},
+	{0x2114c0, 0x0},
+	{0x0115c0, 0x0},
+	{0x1115c0, 0x0},
+	{0x2115c0, 0x0},
+	{0x0116c0, 0x0},
+	{0x1116c0, 0x0},
+	{0x2116c0, 0x0},
+	{0x0117c0, 0x0},
+	{0x1117c0, 0x0},
+	{0x2117c0, 0x0},
+	{0x0118c0, 0x0},
+	{0x1118c0, 0x0},
+	{0x2118c0, 0x0},
+	{0x0100c1, 0x0},
+	{0x1100c1, 0x0},
+	{0x2100c1, 0x0},
+	{0x0101c1, 0x0},
+	{0x1101c1, 0x0},
+	{0x2101c1, 0x0},
+	{0x0102c1, 0x0},
+	{0x1102c1, 0x0},
+	{0x2102c1, 0x0},
+	{0x0103c1, 0x0},
+	{0x1103c1, 0x0},
+	{0x2103c1, 0x0},
+	{0x0104c1, 0x0},
+	{0x1104c1, 0x0},
+	{0x2104c1, 0x0},
+	{0x0105c1, 0x0},
+	{0x1105c1, 0x0},
+	{0x2105c1, 0x0},
+	{0x0106c1, 0x0},
+	{0x1106c1, 0x0},
+	{0x2106c1, 0x0},
+	{0x0107c1, 0x0},
+	{0x1107c1, 0x0},
+	{0x2107c1, 0x0},
+	{0x0108c1, 0x0},
+	{0x1108c1, 0x0},
+	{0x2108c1, 0x0},
+	{0x0110c1, 0x0},
+	{0x1110c1, 0x0},
+	{0x2110c1, 0x0},
+	{0x0111c1, 0x0},
+	{0x1111c1, 0x0},
+	{0x2111c1, 0x0},
+	{0x0112c1, 0x0},
+	{0x1112c1, 0x0},
+	{0x2112c1, 0x0},
+	{0x0113c1, 0x0},
+	{0x1113c1, 0x0},
+	{0x2113c1, 0x0},
+	{0x0114c1, 0x0},
+	{0x1114c1, 0x0},
+	{0x2114c1, 0x0},
+	{0x0115c1, 0x0},
+	{0x1115c1, 0x0},
+	{0x2115c1, 0x0},
+	{0x0116c1, 0x0},
+	{0x1116c1, 0x0},
+	{0x2116c1, 0x0},
+	{0x0117c1, 0x0},
+	{0x1117c1, 0x0},
+	{0x2117c1, 0x0},
+	{0x0118c1, 0x0},
+	{0x1118c1, 0x0},
+	{0x2118c1, 0x0},
+	{0x010020, 0x0},
+	{0x110020, 0x0},
+	{0x210020, 0x0},
+	{0x011020, 0x0},
+	{0x111020, 0x0},
+	{0x211020, 0x0},
+	{0x020072, 0x0},
+	{0x020073, 0x0},
+	{0x020074, 0x0},
+	{0x0100aa, 0x0},
+	{0x0110aa, 0x0},
+	{0x020010, 0x0},
+	{0x120010, 0x0},
+	{0x220010, 0x0},
+	{0x020011, 0x0},
+	{0x120011, 0x0},
+	{0x220011, 0x0},
+	{0x0100ae, 0x0},
+	{0x1100ae, 0x0},
+	{0x2100ae, 0x0},
+	{0x0100af, 0x0},
+	{0x1100af, 0x0},
+	{0x2100af, 0x0},
+	{0x0110ae, 0x0},
+	{0x1110ae, 0x0},
+	{0x2110ae, 0x0},
+	{0x0110af, 0x0},
+	{0x1110af, 0x0},
+	{0x2110af, 0x0},
+	{0x020020, 0x0},
+	{0x120020, 0x0},
+	{0x220020, 0x0},
+	{0x0100a0, 0x0},
+	{0x0100a1, 0x0},
+	{0x0100a2, 0x0},
+	{0x0100a3, 0x0},
+	{0x0100a4, 0x0},
+	{0x0100a5, 0x0},
+	{0x0100a6, 0x0},
+	{0x0100a7, 0x0},
+	{0x0110a0, 0x0},
+	{0x0110a1, 0x0},
+	{0x0110a2, 0x0},
+	{0x0110a3, 0x0},
+	{0x0110a4, 0x0},
+	{0x0110a5, 0x0},
+	{0x0110a6, 0x0},
+	{0x0110a7, 0x0},
+	{0x02007c, 0x0},
+	{0x12007c, 0x0},
+	{0x22007c, 0x0},
+	{0x02007d, 0x0},
+	{0x12007d, 0x0},
+	{0x22007d, 0x0},
+	{0x0400fd, 0x0},
+	{0x0400c0, 0x0},
+	{0x090201, 0x0},
+	{0x190201, 0x0},
+	{0x290201, 0x0},
+	{0x090202, 0x0},
+	{0x190202, 0x0},
+	{0x290202, 0x0},
+	{0x090203, 0x0},
+	{0x190203, 0x0},
+	{0x290203, 0x0},
+	{0x090204, 0x0},
+	{0x190204, 0x0},
+	{0x290204, 0x0},
+	{0x090205, 0x0},
+	{0x190205, 0x0},
+	{0x290205, 0x0},
+	{0x090206, 0x0},
+	{0x190206, 0x0},
+	{0x290206, 0x0},
+	{0x090207, 0x0},
+	{0x190207, 0x0},
+	{0x290207, 0x0},
+	{0x090208, 0x0},
+	{0x190208, 0x0},
+	{0x290208, 0x0},
+	{0x010062, 0x0},
+	{0x010162, 0x0},
+	{0x010262, 0x0},
+	{0x010362, 0x0},
+	{0x010462, 0x0},
+	{0x010562, 0x0},
+	{0x010662, 0x0},
+	{0x010762, 0x0},
+	{0x010862, 0x0},
+	{0x011062, 0x0},
+	{0x011162, 0x0},
+	{0x011262, 0x0},
+	{0x011362, 0x0},
+	{0x011462, 0x0},
+	{0x011562, 0x0},
+	{0x011662, 0x0},
+	{0x011762, 0x0},
+	{0x011862, 0x0},
+	{0x020077, 0x0},
+	{0x010001, 0x0},
+	{0x011001, 0x0},
+	{0x010040, 0x0},
+	{0x010140, 0x0},
+	{0x010240, 0x0},
+	{0x010340, 0x0},
+	{0x010440, 0x0},
+	{0x010540, 0x0},
+	{0x010640, 0x0},
+	{0x010740, 0x0},
+	{0x010840, 0x0},
+	{0x010030, 0x0},
+	{0x010130, 0x0},
+	{0x010230, 0x0},
+	{0x010330, 0x0},
+	{0x010430, 0x0},
+	{0x010530, 0x0},
+	{0x010630, 0x0},
+	{0x010730, 0x0},
+	{0x010830, 0x0},
+	{0x011040, 0x0},
+	{0x011140, 0x0},
+	{0x011240, 0x0},
+	{0x011340, 0x0},
+	{0x011440, 0x0},
+	{0x011540, 0x0},
+	{0x011640, 0x0},
+	{0x011740, 0x0},
+	{0x011840, 0x0},
+	{0x011030, 0x0},
+	{0x011130, 0x0},
+	{0x011230, 0x0},
+	{0x011330, 0x0},
+	{0x011430, 0x0},
+	{0x011530, 0x0},
+	{0x011630, 0x0},
+	{0x011730, 0x0},
+	{0x011830, 0x0},
+};
+
+/* P0 message block paremeter for training firmware */
+struct dram_cfg_param ddr_fsp0_cfg[] = {
+	{ 0xd0000, 0x0 },
+	{ 0x54003, 0xc80 },
+	{ 0x54004, 0x2 },
+	{ 0x54005, 0x2828 },
+	{ 0x54006, 0x11 },
+	{ 0x54008, 0x131f },
+	{ 0x54009, 0xc8 },
+	{ 0x5400b, 0x2 },
+	{ 0x5400f, 0x100 },
+	{ 0x54012, 0x110 },
+	{ 0x54019, 0x2dd4 },
+	{ 0x5401a, 0x31 },
+	{ 0x5401b, 0x4d66 },
+	{ 0x5401c, 0x4d00 },
+	{ 0x5401e, 0x14 },
+	{ 0x5401f, 0x2dd4 },
+	{ 0x54020, 0x31 },
+	{ 0x54021, 0x4d66 },
+	{ 0x54022, 0x4d00 },
+	{ 0x54024, 0x14 },
+	{ 0x54032, 0xd400 },
+	{ 0x54033, 0x312d },
+	{ 0x54034, 0x6600 },
+	{ 0x54035, 0x4d },
+	{ 0x54036, 0x4d },
+	{ 0x54037, 0x1400 },
+	{ 0x54038, 0xd400 },
+	{ 0x54039, 0x312d },
+	{ 0x5403a, 0x6600 },
+	{ 0x5403b, 0x4d },
+	{ 0x5403c, 0x4d },
+	{ 0x5403d, 0x1400 },
+	{ 0xd0000, 0x1 },
+};
+
+
+/* P1 message block paremeter for training firmware */
+struct dram_cfg_param ddr_fsp1_cfg[] = {
+	{ 0xd0000, 0x0 },
+	{ 0x54002, 0x101 },
+	{ 0x54003, 0x190 },
+	{ 0x54004, 0x2 },
+	{ 0x54005, 0x2828 },
+	{ 0x54006, 0x11 },
+	{ 0x54008, 0x121f },
+	{ 0x54009, 0xc8 },
+	{ 0x5400b, 0x2 },
+	{ 0x5400f, 0x100 },
+	{ 0x54012, 0x110 },
+	{ 0x54019, 0x84 },
+	{ 0x5401a, 0x31 },
+	{ 0x5401b, 0x4d66 },
+	{ 0x5401c, 0x4d00 },
+	{ 0x5401e, 0x16 },
+	{ 0x5401f, 0x84 },
+	{ 0x54020, 0x31 },
+	{ 0x54021, 0x4d66 },
+	{ 0x54022, 0x4d00 },
+	{ 0x54024, 0x16 },
+	{ 0x54032, 0x8400 },
+	{ 0x54033, 0x3100 },
+	{ 0x54034, 0x6600 },
+	{ 0x54035, 0x4d },
+	{ 0x54036, 0x4d },
+	{ 0x54037, 0x1600 },
+	{ 0x54038, 0x8400 },
+	{ 0x54039, 0x3100 },
+	{ 0x5403a, 0x6600 },
+	{ 0x5403b, 0x4d },
+	{ 0x5403c, 0x4d },
+	{ 0x5403d, 0x1600 },
+	{ 0xd0000, 0x1 },
+};
+
+
+/* P2 message block paremeter for training firmware */
+struct dram_cfg_param ddr_fsp2_cfg[] = {
+	{ 0xd0000, 0x0 },
+	{ 0x54002, 0x102 },
+	{ 0x54003, 0x64 },
+	{ 0x54004, 0x2 },
+	{ 0x54005, 0x2828 },
+	{ 0x54006, 0x11 },
+	{ 0x54008, 0x121f },
+	{ 0x54009, 0xc8 },
+	{ 0x5400b, 0x2 },
+	{ 0x5400f, 0x100 },
+	{ 0x54012, 0x110 },
+	{ 0x54019, 0x84 },
+	{ 0x5401a, 0x31 },
+	{ 0x5401b, 0x4d66 },
+	{ 0x5401c, 0x4d00 },
+	{ 0x5401e, 0x16 },
+	{ 0x5401f, 0x84 },
+	{ 0x54020, 0x31 },
+	{ 0x54021, 0x4d66 },
+	{ 0x54022, 0x4d00 },
+	{ 0x54024, 0x16 },
+	{ 0x54032, 0x8400 },
+	{ 0x54033, 0x3100 },
+	{ 0x54034, 0x6600 },
+	{ 0x54035, 0x4d },
+	{ 0x54036, 0x4d },
+	{ 0x54037, 0x1600 },
+	{ 0x54038, 0x8400 },
+	{ 0x54039, 0x3100 },
+	{ 0x5403a, 0x6600 },
+	{ 0x5403b, 0x4d },
+	{ 0x5403c, 0x4d },
+	{ 0x5403d, 0x1600 },
+	{ 0xd0000, 0x1 },
+};
+
+
+/* P0 2D message block paremeter for training firmware */
+struct dram_cfg_param ddr_fsp0_2d_cfg[] = {
+	{ 0xd0000, 0x0 },
+	{ 0x54003, 0xc80 },
+	{ 0x54004, 0x2 },
+	{ 0x54005, 0x2828 },
+	{ 0x54006, 0x11 },
+	{ 0x54008, 0x61 },
+	{ 0x54009, 0xc8 },
+	{ 0x5400b, 0x2 },
+	{ 0x5400f, 0x100 },
+	{ 0x54010, 0x1f7f },
+	{ 0x54012, 0x110 },
+	{ 0x54019, 0x2dd4 },
+	{ 0x5401a, 0x31 },
+	{ 0x5401b, 0x4d66 },
+	{ 0x5401c, 0x4d00 },
+	{ 0x5401e, 0x14 },
+	{ 0x5401f, 0x2dd4 },
+	{ 0x54020, 0x31 },
+	{ 0x54021, 0x4d66 },
+	{ 0x54022, 0x4d00 },
+	{ 0x54024, 0x14 },
+	{ 0x54032, 0xd400 },
+	{ 0x54033, 0x312d },
+	{ 0x54034, 0x6600 },
+	{ 0x54035, 0x4d },
+	{ 0x54036, 0x4d },
+	{ 0x54037, 0x1400 },
+	{ 0x54038, 0xd400 },
+	{ 0x54039, 0x312d },
+	{ 0x5403a, 0x6600 },
+	{ 0x5403b, 0x4d },
+	{ 0x5403c, 0x4d },
+	{ 0x5403d, 0x1400 },
+	{ 0xd0000, 0x1 },
+};
+
+/* DRAM PHY init engine image */
+struct dram_cfg_param ddr_phy_pie[] = {
+	{ 0xd0000, 0x0 },
+	{ 0x90000, 0x10 },
+	{ 0x90001, 0x400 },
+	{ 0x90002, 0x10e },
+	{ 0x90003, 0x0 },
+	{ 0x90004, 0x0 },
+	{ 0x90005, 0x8 },
+	{ 0x90029, 0xb },
+	{ 0x9002a, 0x480 },
+	{ 0x9002b, 0x109 },
+	{ 0x9002c, 0x8 },
+	{ 0x9002d, 0x448 },
+	{ 0x9002e, 0x139 },
+	{ 0x9002f, 0x8 },
+	{ 0x90030, 0x478 },
+	{ 0x90031, 0x109 },
+	{ 0x90032, 0x0 },
+	{ 0x90033, 0xe8 },
+	{ 0x90034, 0x109 },
+	{ 0x90035, 0x2 },
+	{ 0x90036, 0x10 },
+	{ 0x90037, 0x139 },
+	{ 0x90038, 0xb },
+	{ 0x90039, 0x7c0 },
+	{ 0x9003a, 0x139 },
+	{ 0x9003b, 0x44 },
+	{ 0x9003c, 0x633 },
+	{ 0x9003d, 0x159 },
+	{ 0x9003e, 0x14f },
+	{ 0x9003f, 0x630 },
+	{ 0x90040, 0x159 },
+	{ 0x90041, 0x47 },
+	{ 0x90042, 0x633 },
+	{ 0x90043, 0x149 },
+	{ 0x90044, 0x4f },
+	{ 0x90045, 0x633 },
+	{ 0x90046, 0x179 },
+	{ 0x90047, 0x8 },
+	{ 0x90048, 0xe0 },
+	{ 0x90049, 0x109 },
+	{ 0x9004a, 0x0 },
+	{ 0x9004b, 0x7c8 },
+	{ 0x9004c, 0x109 },
+	{ 0x9004d, 0x0 },
+	{ 0x9004e, 0x1 },
+	{ 0x9004f, 0x8 },
+	{ 0x90050, 0x0 },
+	{ 0x90051, 0x45a },
+	{ 0x90052, 0x9 },
+	{ 0x90053, 0x0 },
+	{ 0x90054, 0x448 },
+	{ 0x90055, 0x109 },
+	{ 0x90056, 0x40 },
+	{ 0x90057, 0x633 },
+	{ 0x90058, 0x179 },
+	{ 0x90059, 0x1 },
+	{ 0x9005a, 0x618 },
+	{ 0x9005b, 0x109 },
+	{ 0x9005c, 0x40c0 },
+	{ 0x9005d, 0x633 },
+	{ 0x9005e, 0x149 },
+	{ 0x9005f, 0x8 },
+	{ 0x90060, 0x4 },
+	{ 0x90061, 0x48 },
+	{ 0x90062, 0x4040 },
+	{ 0x90063, 0x633 },
+	{ 0x90064, 0x149 },
+	{ 0x90065, 0x0 },
+	{ 0x90066, 0x4 },
+	{ 0x90067, 0x48 },
+	{ 0x90068, 0x40 },
+	{ 0x90069, 0x633 },
+	{ 0x9006a, 0x149 },
+	{ 0x9006b, 0x10 },
+	{ 0x9006c, 0x4 },
+	{ 0x9006d, 0x18 },
+	{ 0x9006e, 0x0 },
+	{ 0x9006f, 0x4 },
+	{ 0x90070, 0x78 },
+	{ 0x90071, 0x549 },
+	{ 0x90072, 0x633 },
+	{ 0x90073, 0x159 },
+	{ 0x90074, 0xd49 },
+	{ 0x90075, 0x633 },
+	{ 0x90076, 0x159 },
+	{ 0x90077, 0x94a },
+	{ 0x90078, 0x633 },
+	{ 0x90079, 0x159 },
+	{ 0x9007a, 0x441 },
+	{ 0x9007b, 0x633 },
+	{ 0x9007c, 0x149 },
+	{ 0x9007d, 0x42 },
+	{ 0x9007e, 0x633 },
+	{ 0x9007f, 0x149 },
+	{ 0x90080, 0x1 },
+	{ 0x90081, 0x633 },
+	{ 0x90082, 0x149 },
+	{ 0x90083, 0x0 },
+	{ 0x90084, 0xe0 },
+	{ 0x90085, 0x109 },
+	{ 0x90086, 0xa },
+	{ 0x90087, 0x10 },
+	{ 0x90088, 0x109 },
+	{ 0x90089, 0x9 },
+	{ 0x9008a, 0x3c0 },
+	{ 0x9008b, 0x149 },
+	{ 0x9008c, 0x9 },
+	{ 0x9008d, 0x3c0 },
+	{ 0x9008e, 0x159 },
+	{ 0x9008f, 0x18 },
+	{ 0x90090, 0x10 },
+	{ 0x90091, 0x109 },
+	{ 0x90092, 0x0 },
+	{ 0x90093, 0x3c0 },
+	{ 0x90094, 0x109 },
+	{ 0x90095, 0x18 },
+	{ 0x90096, 0x4 },
+	{ 0x90097, 0x48 },
+	{ 0x90098, 0x18 },
+	{ 0x90099, 0x4 },
+	{ 0x9009a, 0x58 },
+	{ 0x9009b, 0xb },
+	{ 0x9009c, 0x10 },
+	{ 0x9009d, 0x109 },
+	{ 0x9009e, 0x1 },
+	{ 0x9009f, 0x10 },
+	{ 0x900a0, 0x109 },
+	{ 0x900a1, 0x5 },
+	{ 0x900a2, 0x7c0 },
+	{ 0x900a3, 0x109 },
+	{ 0x40000, 0x811 },
+	{ 0x40020, 0x880 },
+	{ 0x40040, 0x0 },
+	{ 0x40060, 0x0 },
+	{ 0x40001, 0x4008 },
+	{ 0x40021, 0x83 },
+	{ 0x40041, 0x4f },
+	{ 0x40061, 0x0 },
+	{ 0x40002, 0x4040 },
+	{ 0x40022, 0x83 },
+	{ 0x40042, 0x51 },
+	{ 0x40062, 0x0 },
+	{ 0x40003, 0x811 },
+	{ 0x40023, 0x880 },
+	{ 0x40043, 0x0 },
+	{ 0x40063, 0x0 },
+	{ 0x40004, 0x720 },
+	{ 0x40024, 0xf },
+	{ 0x40044, 0x1740 },
+	{ 0x40064, 0x0 },
+	{ 0x40005, 0x16 },
+	{ 0x40025, 0x83 },
+	{ 0x40045, 0x4b },
+	{ 0x40065, 0x0 },
+	{ 0x40006, 0x716 },
+	{ 0x40026, 0xf },
+	{ 0x40046, 0x2001 },
+	{ 0x40066, 0x0 },
+	{ 0x40007, 0x716 },
+	{ 0x40027, 0xf },
+	{ 0x40047, 0x2800 },
+	{ 0x40067, 0x0 },
+	{ 0x40008, 0x716 },
+	{ 0x40028, 0xf },
+	{ 0x40048, 0xf00 },
+	{ 0x40068, 0x0 },
+	{ 0x40009, 0x720 },
+	{ 0x40029, 0xf },
+	{ 0x40049, 0x1400 },
+	{ 0x40069, 0x0 },
+	{ 0x4000a, 0xe08 },
+	{ 0x4002a, 0xc15 },
+	{ 0x4004a, 0x0 },
+	{ 0x4006a, 0x0 },
+	{ 0x4000b, 0x625 },
+	{ 0x4002b, 0x15 },
+	{ 0x4004b, 0x0 },
+	{ 0x4006b, 0x0 },
+	{ 0x4000c, 0x4028 },
+	{ 0x4002c, 0x80 },
+	{ 0x4004c, 0x0 },
+	{ 0x4006c, 0x0 },
+	{ 0x4000d, 0xe08 },
+	{ 0x4002d, 0xc1a },
+	{ 0x4004d, 0x0 },
+	{ 0x4006d, 0x0 },
+	{ 0x4000e, 0x625 },
+	{ 0x4002e, 0x1a },
+	{ 0x4004e, 0x0 },
+	{ 0x4006e, 0x0 },
+	{ 0x4000f, 0x4040 },
+	{ 0x4002f, 0x80 },
+	{ 0x4004f, 0x0 },
+	{ 0x4006f, 0x0 },
+	{ 0x40010, 0x2604 },
+	{ 0x40030, 0x15 },
+	{ 0x40050, 0x0 },
+	{ 0x40070, 0x0 },
+	{ 0x40011, 0x708 },
+	{ 0x40031, 0x5 },
+	{ 0x40051, 0x0 },
+	{ 0x40071, 0x2002 },
+	{ 0x40012, 0x8 },
+	{ 0x40032, 0x80 },
+	{ 0x40052, 0x0 },
+	{ 0x40072, 0x0 },
+	{ 0x40013, 0x2604 },
+	{ 0x40033, 0x1a },
+	{ 0x40053, 0x0 },
+	{ 0x40073, 0x0 },
+	{ 0x40014, 0x708 },
+	{ 0x40034, 0xa },
+	{ 0x40054, 0x0 },
+	{ 0x40074, 0x2002 },
+	{ 0x40015, 0x4040 },
+	{ 0x40035, 0x80 },
+	{ 0x40055, 0x0 },
+	{ 0x40075, 0x0 },
+	{ 0x40016, 0x60a },
+	{ 0x40036, 0x15 },
+	{ 0x40056, 0x1200 },
+	{ 0x40076, 0x0 },
+	{ 0x40017, 0x61a },
+	{ 0x40037, 0x15 },
+	{ 0x40057, 0x1300 },
+	{ 0x40077, 0x0 },
+	{ 0x40018, 0x60a },
+	{ 0x40038, 0x1a },
+	{ 0x40058, 0x1200 },
+	{ 0x40078, 0x0 },
+	{ 0x40019, 0x642 },
+	{ 0x40039, 0x1a },
+	{ 0x40059, 0x1300 },
+	{ 0x40079, 0x0 },
+	{ 0x4001a, 0x4808 },
+	{ 0x4003a, 0x880 },
+	{ 0x4005a, 0x0 },
+	{ 0x4007a, 0x0 },
+	{ 0x900a4, 0x0 },
+	{ 0x900a5, 0x790 },
+	{ 0x900a6, 0x11a },
+	{ 0x900a7, 0x8 },
+	{ 0x900a8, 0x7aa },
+	{ 0x900a9, 0x2a },
+	{ 0x900aa, 0x10 },
+	{ 0x900ab, 0x7b2 },
+	{ 0x900ac, 0x2a },
+	{ 0x900ad, 0x0 },
+	{ 0x900ae, 0x7c8 },
+	{ 0x900af, 0x109 },
+	{ 0x900b0, 0x10 },
+	{ 0x900b1, 0x10 },
+	{ 0x900b2, 0x109 },
+	{ 0x900b3, 0x10 },
+	{ 0x900b4, 0x2a8 },
+	{ 0x900b5, 0x129 },
+	{ 0x900b6, 0x8 },
+	{ 0x900b7, 0x370 },
+	{ 0x900b8, 0x129 },
+	{ 0x900b9, 0xa },
+	{ 0x900ba, 0x3c8 },
+	{ 0x900bb, 0x1a9 },
+	{ 0x900bc, 0xc },
+	{ 0x900bd, 0x408 },
+	{ 0x900be, 0x199 },
+	{ 0x900bf, 0x14 },
+	{ 0x900c0, 0x790 },
+	{ 0x900c1, 0x11a },
+	{ 0x900c2, 0x8 },
+	{ 0x900c3, 0x4 },
+	{ 0x900c4, 0x18 },
+	{ 0x900c5, 0xe },
+	{ 0x900c6, 0x408 },
+	{ 0x900c7, 0x199 },
+	{ 0x900c8, 0x8 },
+	{ 0x900c9, 0x8568 },
+	{ 0x900ca, 0x108 },
+	{ 0x900cb, 0x18 },
+	{ 0x900cc, 0x790 },
+	{ 0x900cd, 0x16a },
+	{ 0x900ce, 0x8 },
+	{ 0x900cf, 0x1d8 },
+	{ 0x900d0, 0x169 },
+	{ 0x900d1, 0x10 },
+	{ 0x900d2, 0x8558 },
+	{ 0x900d3, 0x168 },
+	{ 0x900d4, 0x70 },
+	{ 0x900d5, 0x788 },
+	{ 0x900d6, 0x16a },
+	{ 0x900d7, 0x1ff8 },
+	{ 0x900d8, 0x85a8 },
+	{ 0x900d9, 0x1e8 },
+	{ 0x900da, 0x50 },
+	{ 0x900db, 0x798 },
+	{ 0x900dc, 0x16a },
+	{ 0x900dd, 0x60 },
+	{ 0x900de, 0x7a0 },
+	{ 0x900df, 0x16a },
+	{ 0x900e0, 0x8 },
+	{ 0x900e1, 0x8310 },
+	{ 0x900e2, 0x168 },
+	{ 0x900e3, 0x8 },
+	{ 0x900e4, 0xa310 },
+	{ 0x900e5, 0x168 },
+	{ 0x900e6, 0xa },
+	{ 0x900e7, 0x408 },
+	{ 0x900e8, 0x169 },
+	{ 0x900e9, 0x6e },
+	{ 0x900ea, 0x0 },
+	{ 0x900eb, 0x68 },
+	{ 0x900ec, 0x0 },
+	{ 0x900ed, 0x408 },
+	{ 0x900ee, 0x169 },
+	{ 0x900ef, 0x0 },
+	{ 0x900f0, 0x8310 },
+	{ 0x900f1, 0x168 },
+	{ 0x900f2, 0x0 },
+	{ 0x900f3, 0xa310 },
+	{ 0x900f4, 0x168 },
+	{ 0x900f5, 0x1ff8 },
+	{ 0x900f6, 0x85a8 },
+	{ 0x900f7, 0x1e8 },
+	{ 0x900f8, 0x68 },
+	{ 0x900f9, 0x798 },
+	{ 0x900fa, 0x16a },
+	{ 0x900fb, 0x78 },
+	{ 0x900fc, 0x7a0 },
+	{ 0x900fd, 0x16a },
+	{ 0x900fe, 0x68 },
+	{ 0x900ff, 0x790 },
+	{ 0x90100, 0x16a },
+	{ 0x90101, 0x8 },
+	{ 0x90102, 0x8b10 },
+	{ 0x90103, 0x168 },
+	{ 0x90104, 0x8 },
+	{ 0x90105, 0xab10 },
+	{ 0x90106, 0x168 },
+	{ 0x90107, 0xa },
+	{ 0x90108, 0x408 },
+	{ 0x90109, 0x169 },
+	{ 0x9010a, 0x58 },
+	{ 0x9010b, 0x0 },
+	{ 0x9010c, 0x68 },
+	{ 0x9010d, 0x0 },
+	{ 0x9010e, 0x408 },
+	{ 0x9010f, 0x169 },
+	{ 0x90110, 0x0 },
+	{ 0x90111, 0x8b10 },
+	{ 0x90112, 0x168 },
+	{ 0x90113, 0x0 },
+	{ 0x90114, 0xab10 },
+	{ 0x90115, 0x168 },
+	{ 0x90116, 0x0 },
+	{ 0x90117, 0x1d8 },
+	{ 0x90118, 0x169 },
+	{ 0x90119, 0x80 },
+	{ 0x9011a, 0x790 },
+	{ 0x9011b, 0x16a },
+	{ 0x9011c, 0x18 },
+	{ 0x9011d, 0x7aa },
+	{ 0x9011e, 0x6a },
+	{ 0x9011f, 0xa },
+	{ 0x90120, 0x0 },
+	{ 0x90121, 0x1e9 },
+	{ 0x90122, 0x8 },
+	{ 0x90123, 0x8080 },
+	{ 0x90124, 0x108 },
+	{ 0x90125, 0xf },
+	{ 0x90126, 0x408 },
+	{ 0x90127, 0x169 },
+	{ 0x90128, 0xc },
+	{ 0x90129, 0x0 },
+	{ 0x9012a, 0x68 },
+	{ 0x9012b, 0x9 },
+	{ 0x9012c, 0x0 },
+	{ 0x9012d, 0x1a9 },
+	{ 0x9012e, 0x0 },
+	{ 0x9012f, 0x408 },
+	{ 0x90130, 0x169 },
+	{ 0x90131, 0x0 },
+	{ 0x90132, 0x8080 },
+	{ 0x90133, 0x108 },
+	{ 0x90134, 0x8 },
+	{ 0x90135, 0x7aa },
+	{ 0x90136, 0x6a },
+	{ 0x90137, 0x0 },
+	{ 0x90138, 0x8568 },
+	{ 0x90139, 0x108 },
+	{ 0x9013a, 0xb7 },
+	{ 0x9013b, 0x790 },
+	{ 0x9013c, 0x16a },
+	{ 0x9013d, 0x1f },
+	{ 0x9013e, 0x0 },
+	{ 0x9013f, 0x68 },
+	{ 0x90140, 0x8 },
+	{ 0x90141, 0x8558 },
+	{ 0x90142, 0x168 },
+	{ 0x90143, 0xf },
+	{ 0x90144, 0x408 },
+	{ 0x90145, 0x169 },
+	{ 0x90146, 0xd },
+	{ 0x90147, 0x0 },
+	{ 0x90148, 0x68 },
+	{ 0x90149, 0x0 },
+	{ 0x9014a, 0x408 },
+	{ 0x9014b, 0x169 },
+	{ 0x9014c, 0x0 },
+	{ 0x9014d, 0x8558 },
+	{ 0x9014e, 0x168 },
+	{ 0x9014f, 0x8 },
+	{ 0x90150, 0x3c8 },
+	{ 0x90151, 0x1a9 },
+	{ 0x90152, 0x3 },
+	{ 0x90153, 0x370 },
+	{ 0x90154, 0x129 },
+	{ 0x90155, 0x20 },
+	{ 0x90156, 0x2aa },
+	{ 0x90157, 0x9 },
+	{ 0x90158, 0x0 },
+	{ 0x90159, 0x400 },
+	{ 0x9015a, 0x10e },
+	{ 0x9015b, 0x8 },
+	{ 0x9015c, 0xe8 },
+	{ 0x9015d, 0x109 },
+	{ 0x9015e, 0x0 },
+	{ 0x9015f, 0x8140 },
+	{ 0x90160, 0x10c },
+	{ 0x90161, 0x10 },
+	{ 0x90162, 0x8138 },
+	{ 0x90163, 0x10c },
+	{ 0x90164, 0x8 },
+	{ 0x90165, 0x7c8 },
+	{ 0x90166, 0x101 },
+	{ 0x90167, 0x8 },
+	{ 0x90168, 0x448 },
+	{ 0x90169, 0x109 },
+	{ 0x9016a, 0xf },
+	{ 0x9016b, 0x7c0 },
+	{ 0x9016c, 0x109 },
+	{ 0x9016d, 0x0 },
+	{ 0x9016e, 0xe8 },
+	{ 0x9016f, 0x109 },
+	{ 0x90170, 0x47 },
+	{ 0x90171, 0x630 },
+	{ 0x90172, 0x109 },
+	{ 0x90173, 0x8 },
+	{ 0x90174, 0x618 },
+	{ 0x90175, 0x109 },
+	{ 0x90176, 0x8 },
+	{ 0x90177, 0xe0 },
+	{ 0x90178, 0x109 },
+	{ 0x90179, 0x0 },
+	{ 0x9017a, 0x7c8 },
+	{ 0x9017b, 0x109 },
+	{ 0x9017c, 0x8 },
+	{ 0x9017d, 0x8140 },
+	{ 0x9017e, 0x10c },
+	{ 0x9017f, 0x0 },
+	{ 0x90180, 0x1 },
+	{ 0x90181, 0x8 },
+	{ 0x90182, 0x8 },
+	{ 0x90183, 0x4 },
+	{ 0x90184, 0x8 },
+	{ 0x90185, 0x8 },
+	{ 0x90186, 0x7c8 },
+	{ 0x90187, 0x101 },
+	{ 0x90006, 0x0 },
+	{ 0x90007, 0x0 },
+	{ 0x90008, 0x8 },
+	{ 0x90009, 0x0 },
+	{ 0x9000a, 0x0 },
+	{ 0x9000b, 0x0 },
+	{ 0xd00e7, 0x400 },
+	{ 0x90017, 0x0 },
+	{ 0x9001f, 0x29 },
+	{ 0x90026, 0x6a },
+	{ 0x400d0, 0x0 },
+	{ 0x400d1, 0x101 },
+	{ 0x400d2, 0x105 },
+	{ 0x400d3, 0x107 },
+	{ 0x400d4, 0x10f },
+	{ 0x400d5, 0x202 },
+	{ 0x400d6, 0x20a },
+	{ 0x400d7, 0x20b },
+	{ 0x2003a, 0x2 },
+	{ 0x2000b, 0x384 },
+	{ 0x2000c, 0xc8 },
+	{ 0x2000d, 0x7d0 },
+	{ 0x2000e, 0x2c },
+	{ 0x12000b, 0x70 },
+	{ 0x12000c, 0x19 },
+	{ 0x12000d, 0xfa },
+	{ 0x12000e, 0x10 },
+	{ 0x22000b, 0x1c },
+	{ 0x22000c, 0x6 },
+	{ 0x22000d, 0x3e },
+	{ 0x22000e, 0x10 },
+	{ 0x9000c, 0x0 },
+	{ 0x9000d, 0x173 },
+	{ 0x9000e, 0x60 },
+	{ 0x9000f, 0x6110 },
+	{ 0x90010, 0x2152 },
+	{ 0x90011, 0xdfbd },
+	{ 0x90012, 0x2060 },
+	{ 0x90013, 0x6152 },
+	{ 0x20010, 0x5a },
+	{ 0x20011, 0x3 },
+	{ 0x120010, 0x5a },
+	{ 0x120011, 0x3 },
+	{ 0x220010, 0x5a },
+	{ 0x220011, 0x3 },
+	{ 0x40080, 0xe0 },
+	{ 0x40081, 0x12 },
+	{ 0x40082, 0xe0 },
+	{ 0x40083, 0x12 },
+	{ 0x40084, 0xe0 },
+	{ 0x40085, 0x12 },
+	{ 0x140080, 0xe0 },
+	{ 0x140081, 0x12 },
+	{ 0x140082, 0xe0 },
+	{ 0x140083, 0x12 },
+	{ 0x140084, 0xe0 },
+	{ 0x140085, 0x12 },
+	{ 0x240080, 0xe0 },
+	{ 0x240081, 0x12 },
+	{ 0x240082, 0xe0 },
+	{ 0x240083, 0x12 },
+	{ 0x240084, 0xe0 },
+	{ 0x240085, 0x12 },
+	{ 0x400fd, 0xf },
+	{ 0x10011, 0x1 },
+	{ 0x10012, 0x1 },
+	{ 0x10013, 0x180 },
+	{ 0x10018, 0x1 },
+	{ 0x10002, 0x6209 },
+	{ 0x100b2, 0x1 },
+	{ 0x101b4, 0x1 },
+	{ 0x102b4, 0x1 },
+	{ 0x103b4, 0x1 },
+	{ 0x104b4, 0x1 },
+	{ 0x105b4, 0x1 },
+	{ 0x106b4, 0x1 },
+	{ 0x107b4, 0x1 },
+	{ 0x108b4, 0x1 },
+	{ 0x11011, 0x1 },
+	{ 0x11012, 0x1 },
+	{ 0x11013, 0x180 },
+	{ 0x11018, 0x1 },
+	{ 0x11002, 0x6209 },
+	{ 0x110b2, 0x1 },
+	{ 0x111b4, 0x1 },
+	{ 0x112b4, 0x1 },
+	{ 0x113b4, 0x1 },
+	{ 0x114b4, 0x1 },
+	{ 0x115b4, 0x1 },
+	{ 0x116b4, 0x1 },
+	{ 0x117b4, 0x1 },
+	{ 0x118b4, 0x1 },
+	{ 0x20089, 0x1 },
+	{ 0x20088, 0x19 },
+	{ 0xc0080, 0x2 },
+	{ 0xd0000, 0x1 }
+};
+
+struct dram_fsp_msg ddr_dram_fsp_msg[] = {
+	{
+		/* P0 3200mts 1D */
+		.drate = 3200,
+		.fw_type = FW_1D_IMAGE,
+		.fsp_cfg = ddr_fsp0_cfg,
+		.fsp_cfg_num = ARRAY_SIZE(ddr_fsp0_cfg),
+	},
+	{
+		/* P1 400mts 1D */
+		.drate = 400,
+		.fw_type = FW_1D_IMAGE,
+		.fsp_cfg = ddr_fsp1_cfg,
+		.fsp_cfg_num = ARRAY_SIZE(ddr_fsp1_cfg),
+	},
+	{
+		/* P2 100mts 1D */
+		.drate = 100,
+		.fw_type = FW_1D_IMAGE,
+		.fsp_cfg = ddr_fsp2_cfg,
+		.fsp_cfg_num = ARRAY_SIZE(ddr_fsp2_cfg),
+	},
+	{
+		/* P0 3200mts 2D */
+		.drate = 3200,
+		.fw_type = FW_2D_IMAGE,
+		.fsp_cfg = ddr_fsp0_2d_cfg,
+		.fsp_cfg_num = ARRAY_SIZE(ddr_fsp0_2d_cfg),
+	},
+};
+
+/* ddr timing config params */
+struct dram_timing_info dram_timing = {
+	.ddrc_cfg = ddr_ddrc_cfg,
+	.ddrc_cfg_num = ARRAY_SIZE(ddr_ddrc_cfg),
+	.ddrphy_cfg = ddr_ddrphy_cfg,
+	.ddrphy_cfg_num = ARRAY_SIZE(ddr_ddrphy_cfg),
+	.fsp_msg = ddr_dram_fsp_msg,
+	.fsp_msg_num = ARRAY_SIZE(ddr_dram_fsp_msg),
+	.ddrphy_trained_csr = ddr_ddrphy_trained_csr,
+	.ddrphy_trained_csr_num = ARRAY_SIZE(ddr_ddrphy_trained_csr),
+	.ddrphy_pie = ddr_phy_pie,
+	.ddrphy_pie_num = ARRAY_SIZE(ddr_phy_pie),
+	.fsp_table = { 3200, 400, 100, },
+};
+
diff --git a/board/freescale/imx8mn_pew/spl.c b/board/freescale/imx8mn_pew/spl.c
new file mode 100644
index 00000000..1c760828
--- /dev/null
+++ b/board/freescale/imx8mn_pew/spl.c
@@ -0,0 +1,359 @@
+// SPDX-License-Identifier: GPL-2.0-or-later
+/*
+ * Copyright 2018-2019, 2021 NXP
+ * Copyright 2022-2023 Panasonic Corporation
+ *
+ */
+
+#include <common.h>
+#include <command.h>
+#include <cpu_func.h>
+#include <hang.h>
+#include <image.h>
+#include <init.h>
+#include <log.h>
+#include <spl.h>
+#include <asm/global_data.h>
+#include <asm/io.h>
+#include <asm/mach-imx/iomux-v3.h>
+#include <asm/arch/clock.h>
+#include <asm/arch/imx8mn_pins.h>
+#include <asm/arch/sys_proto.h>
+#include <asm/mach-imx/boot_mode.h>
+#include <asm/arch/ddr.h>
+
+#include <dm/uclass.h>
+#include <dm/device.h>
+#include <dm/uclass-internal.h>
+#include <dm/device-internal.h>
+#include <power/pmic.h>
+#include <power/pca9450.h>
+#include <power/bd71837.h>
+#include <asm/mach-imx/gpio.h>
+#include <asm/mach-imx/mxc_i2c.h>
+#include <fsl_esdhc_imx.h>
+#include <mmc.h>
+#include <linux/delay.h>
+
+DECLARE_GLOBAL_DATA_PTR;
+
+static unsigned gpios_out_high[] = {
+	IMX_GPIO_NR(1,  9),		/* Secure IC PWRDOWN_EN - Power on    */
+	IMX_GPIO_NR(1, 23),		/* ENET_INTR/PWRDN - Power on         */
+	IMX_GPIO_NR(2, 19),		/* SD2_NRST        - Power on         */
+	IMX_GPIO_NR(3, 25),		/* SYS_STATUS LED  - LED off          */
+	IMX_GPIO_NR(4, 22),		/* ENET_nRST       - Not reset        */
+	IMX_GPIO_NR(5, 28),		/* CPU間通信用     - SoC要求あり      */
+	IMX_GPIO_NR(5, 29),		/* MCU_RST         - Normal Operation */
+#if defined(CONFIG_TARGET_IMX8MN_PEW_MON)
+
+	IMX_GPIO_NR(1, 25),		/* LCD PWR ON      - Power off        */
+	IMX_GPIO_NR(2,  9),		/* LCD RESET       - Reset state      */
+	IMX_GPIO_NR(2, 11),		/* LCD STBYBT      - Standby state    */
+	IMX_GPIO_NR(4, 28),		/* HOST_WAKE_BT    - Hold             */
+	IMX_GPIO_NR(5,  3),		/* HOST_WAKE_WLAN  - Hold             */
+	IMX_GPIO_NR(5,  5),		/* Codec PDN       - Power off        */
+#elif defined(CONFIG_TARGET_IMX8MN_PEW_GW)
+	IMX_GPIO_NR(4, 28),		/* HOST_WAKE_BT    - Hold             */
+	IMX_GPIO_NR(5,  3),		/* HOST_WAKE_WLAN  - Hold             */
+	IMX_GPIO_NR(5,  5),		/* Codec PDN       - Power off        */
+#elif defined(CONFIG_TARGET_IMX8MN_PEW_BIZGW)
+	IMX_GPIO_NR(1,  6),		/* RS485 ch1 LED   - Off              */
+	IMX_GPIO_NR(1,  7),		/* RS485 ch1 LED   - Off              */
+	IMX_GPIO_NR(1, 11),		/* RS485#A MCU_RESET_B - Reset        */
+	IMX_GPIO_NR(1, 14),		/* LTE ch1 LED     - Off              */
+	IMX_GPIO_NR(1, 15),		/* LTE ch1 LED     - Off              */
+	IMX_GPIO_NR(1, 18),		/* サーバ状態LED                      */
+	IMX_GPIO_NR(1, 28),		/* RS485#B MCU_RESET_B - Reset        */
+	IMX_GPIO_NR(2, 20),		/* 予備LED         - Off              */
+	IMX_GPIO_NR(3,  0),		/* LTE_RESET_N     - Reset state      */
+	IMX_GPIO_NR(3,  1),		/* LTE_PWRKEY      - Power off        */
+	IMX_GPIO_NR(3,  7),		/* LTE_WAKEUP_IN                      */
+	IMX_GPIO_NR(3,  8),		/* LTE_AP_READY                       */
+	IMX_GPIO_NR(3,  9),		/* LTE_W_DISABLE#                     */
+	IMX_GPIO_NR(4, 21),		/* LTE USB-HiSideSW - VBUS off        */
+#endif
+};
+
+static unsigned gpios_out_low[] = {
+	IMX_GPIO_NR(1,  5),		/* 空きピン                           */
+	IMX_GPIO_NR(1,  8),		/* 空きピン                           */
+	IMX_GPIO_NR(1, 10),		/* 空きピン                           */
+	IMX_GPIO_NR(3, 16),		/* 空きピン                           */
+	IMX_GPIO_NR(3, 20),		/* LCD 電源IC FLTB - Power off        */
+	IMX_GPIO_NR(3, 21),		/* TP Ctrlリセット - Reset state      */
+	IMX_GPIO_NR(3, 24),		/* SYS_PRST        - Not reset        */
+	IMX_GPIO_NR(4, 27),		/* 空きピン                           */
+	IMX_GPIO_NR(5, 12),		/* 空きピン                           */
+	IMX_GPIO_NR(5, 13),		/* 空きピン                           */
+#if defined(CONFIG_TARGET_IMX8MN_PEW_MON)
+	IMX_GPIO_NR(3, 20),		/* LCD 電源IC FLTB - Power off        */
+	IMX_GPIO_NR(3, 21),		/* TP Ctrlリセット - Reset state      */
+#elif defined(CONFIG_TARGET_IMX8MN_PEW_GW)
+	IMX_GPIO_NR(1,  6),		/* 未使用                             */
+	IMX_GPIO_NR(1,  7),		/* 未使用                             */
+	IMX_GPIO_NR(1, 11),		/* 未使用                             */
+	IMX_GPIO_NR(1, 12),		/* 未使用                             */
+	IMX_GPIO_NR(1, 13),		/* 未使用                             */
+	IMX_GPIO_NR(1, 14),		/* 未使用                             */
+	IMX_GPIO_NR(1, 15),		/* 未使用                             */
+	IMX_GPIO_NR(1, 18),		/* 未使用                             */
+	IMX_GPIO_NR(1, 25),		/* 未使用                             */
+	IMX_GPIO_NR(1, 28),		/* 未使用                             */
+	IMX_GPIO_NR(1, 29),		/* 未使用                             */
+	IMX_GPIO_NR(2,  9),		/* 未使用                             */
+	IMX_GPIO_NR(2, 11),		/* 未使用                             */
+	IMX_GPIO_NR(2, 20),		/* 未使用                             */
+	IMX_GPIO_NR(3,  0),		/* 未使用                             */
+	IMX_GPIO_NR(3,  1),		/* 未使用                             */
+	IMX_GPIO_NR(3,  6),		/* 未使用                             */
+	IMX_GPIO_NR(3,  7),		/* 未使用                             */
+	IMX_GPIO_NR(3,  8),		/* 未使用                             */
+	IMX_GPIO_NR(3,  9),		/* 未使用                             */
+	IMX_GPIO_NR(3, 14),		/* 未使用                             */
+	IMX_GPIO_NR(3, 19),		/* 未使用                             */
+	IMX_GPIO_NR(3, 22),		/* 未使用                             */
+	IMX_GPIO_NR(3, 23),		/* 未使用                             */
+	IMX_GPIO_NR(4, 21),		/* 未使用                             */
+	IMX_GPIO_NR(5, 18),		/* 未使用                             */
+	IMX_GPIO_NR(5, 19),		/* 未使用                             */
+	IMX_GPIO_NR(5, 20),		/* 未使用                             */
+	IMX_GPIO_NR(5, 21),		/* 未使用                             */
+#elif defined(CONFIG_TARGET_IMX8MN_PEW_BIZGW)
+	IMX_GPIO_NR(1,  0),		/* REF_CLK_32K                        */
+	IMX_GPIO_NR(1,  1),		/* WIFIBT_PMIC_EN  - Disable          */
+	IMX_GPIO_NR(1, 13),		/* 未使用                             */
+	IMX_GPIO_NR(1, 18),		/* サーバー状態LED - Off              */
+	IMX_GPIO_NR(1, 25),		/* 未使用                             */
+	IMX_GPIO_NR(2,  0),		/* 未使用                             */
+	IMX_GPIO_NR(2,  1),		/* 未使用                             */
+	IMX_GPIO_NR(2,  2),		/* 未使用                             */
+	IMX_GPIO_NR(2,  3),		/* 未使用                             */
+	IMX_GPIO_NR(2,  4),		/* 未使用                             */
+	IMX_GPIO_NR(2,  5),		/* 未使用                             */
+	IMX_GPIO_NR(2,  9),		/* 未使用                             */
+	IMX_GPIO_NR(2, 11),		/* 未使用                             */
+	IMX_GPIO_NR(3, 19),		/* 未使用                             */
+	IMX_GPIO_NR(3, 22),		/* 未使用                             */
+	IMX_GPIO_NR(3, 23),		/* 未使用                             */
+	IMX_GPIO_NR(4, 23),		/* 未使用                             */
+	IMX_GPIO_NR(4, 24),		/* 未使用                             */
+	IMX_GPIO_NR(4, 25),		/* 未使用                             */
+	IMX_GPIO_NR(4, 26),		/* 未使用                             */
+	IMX_GPIO_NR(4, 28),		/* 未使用                             */
+	IMX_GPIO_NR(4, 29),		/* 未使用                             */
+	IMX_GPIO_NR(4, 30),		/* 未使用                             */
+	IMX_GPIO_NR(4, 31),		/* 未使用                             */
+	IMX_GPIO_NR(5,  0),		/* 未使用                             */
+	IMX_GPIO_NR(5,  1),		/* 未使用                             */
+	IMX_GPIO_NR(5,  2),		/* 未使用                             */
+	IMX_GPIO_NR(5,  3),		/* 未使用                             */
+	IMX_GPIO_NR(5,  4),		/* 未使用                             */
+	IMX_GPIO_NR(5,  5),		/* 未使用                             */
+	IMX_GPIO_NR(5, 18),		/* 未使用                             */
+	IMX_GPIO_NR(5, 19),		/* 未使用                             */
+	IMX_GPIO_NR(5, 22),		/* 未使用                             */
+	IMX_GPIO_NR(5, 23),		/* 未使用                             */
+	IMX_GPIO_NR(5, 26),		/* 未使用                             */
+	IMX_GPIO_NR(5, 27),		/* 未使用                             */
+#endif
+};
+
+#if defined(CONFIG_TARGET_IMX8MN_PEW_MON) || defined(CONFIG_TARGET_IMX8MN_PEW_GW)
+static iomux_v3_cfg_t const iomux_pads_wlan_config[] = {
+	IMX8MN_PAD_SAI2_RXD0__GPIO4_IO23		| MUX_PAD_CTRL(0x116),	/* WLAN CON[7]          */
+	IMX8MN_PAD_UART1_RXD__GPIO5_IO22		| MUX_PAD_CTRL(0x116),	/* WLAN CONFIG_XOSC_SEL */
+	IMX8MN_PAD_UART3_TXD__GPIO5_IO27		| MUX_PAD_CTRL(0x116),	/* pull CON[8]          */
+};
+
+static iomux_v3_cfg_t const iomux_pads_wlan_normal[] = {
+	IMX8MN_PAD_SAI2_RXD0__SAI2_RX_DATA0		| MUX_PAD_CTRL(0x116),
+	IMX8MN_PAD_UART1_RXD__UART1_DCE_RX		| MUX_PAD_CTRL(0x040),
+	IMX8MN_PAD_UART3_TXD__UART1_DCE_RTS_B	| MUX_PAD_CTRL(0x040),
+};
+#endif //CONFIG_TARGET_IMX8MN_PEW_MON || CONFIG_TARGET_IMX8MN_PEW_GW
+
+static void set_out_gpios(unsigned *p, int cnt, int val)
+{
+	int i;
+	for (i = 0; i < cnt; i++) {
+		gpio_request(*p, "setup");
+		gpio_direction_output(*p, val);
+		gpio_free(*p);
+		p++;
+	}
+}
+
+int spl_board_boot_device(enum boot_device boot_dev_spl)
+{
+#ifdef CONFIG_SPL_BOOTROM_SUPPORT
+	return BOOT_DEVICE_BOOTROM;
+#else
+#error "must be CONFIG_SPL_BOOTROM_SUPPORT=y"
+#endif
+}
+
+void spl_dram_init(void)
+{
+	ddr_init(&dram_timing);
+}
+
+int power_init_board(void)
+{
+	struct udevice *dev;
+	int ret;
+
+	ret = pmic_get("pca9450@25", &dev);
+	if (ret == -ENODEV) {
+		puts("No pca9450@25\n");
+		return 0;
+	}
+	if (ret != 0)
+		return ret;
+
+	/* BUCK1: 0.95V (default 0.85V)         */
+	/* BUCK2: 0.95V (default 0.85V)         */
+	/* BUCK3: Not supported for pca9450b    */
+	/* BUCK4: 3.30V (same as default value) */
+	/* BUCK5: 1.80V (same as default value) */
+	/* BUCK6: 1.10V (same as default value) */
+	/* LDO1:  1.80V (same as default value) */
+	/* LDO2:  0.80V (default 0.85V)         */
+	/* LDO3:  1.80V (same as default value) */
+	/* LDO4:  1.20V (default 0.90V)         */
+	/* LDO5:  3.30V/1.8V (same as default value) */
+
+	/* BUCKxOUT_DVS0/1 control BUCK123 output */
+	pmic_reg_write(dev, PCA9450_BUCK123_DVS, 0x2B);
+
+	/* increase VDD_SOC/VDD_DRAM to typical value 0.95V before first DRAM access */
+	pmic_reg_write(dev, PCA9450_BUCK1OUT_DVS0, 0x1C);
+
+	/* Set DVS1 to 0.95v for low-v suspend */
+	/* Enable DVS control through PMIC_STBY_REQ and set B1_ENMODE=1 (ON by PMIC_ON_REQ=H) / RAMP=11b(25mV/8us) */
+	pmic_reg_write(dev, PCA9450_BUCK1OUT_DVS1, 0x1C);
+	pmic_reg_write(dev, PCA9450_BUCK1CTRL, 0xD9);
+
+	/* set BUCK2 to 0.95V from default 0.85V */
+	pmic_reg_write(dev, PCA9450_BUCK2OUT_DVS0, 0x1C);
+	pmic_reg_write(dev, PCA9450_BUCK2OUT_DVS1, 0x1C);
+	pmic_reg_write(dev, PCA9450_BUCK2CTRL, 0xCA);
+
+	/* set VDD_SNVS_0V8 to 0.80V from default 0.85V */
+	pmic_reg_write(dev, PCA9450_LDO2CTRL, 0xC0);
+
+	/* set VDD_PHY_1V2 to 1.20V from default 0.90V */
+	pmic_reg_write(dev, PCA9450_LDO4CTRL, 0xC4);
+
+	/* set WDOG_B_CFG to cold reset */
+	pmic_reg_write(dev, PCA9450_RESET_CTRL, 0xA1);
+
+	return 0;
+}
+
+void spl_board_init(void)
+{
+	struct udevice *dev;
+	int ret;
+
+	if (IS_ENABLED(CONFIG_FSL_CAAM)) {
+		ret = uclass_get_device_by_driver(UCLASS_MISC, DM_DRIVER_GET(caam_jr), &dev);
+		if (ret)
+			printf("Failed to initialize caam_jr: %d\n", ret);
+	}
+	puts("Normal Boot\n");
+}
+
+#ifdef CONFIG_SPL_LOAD_FIT
+int board_fit_config_name_match(const char *name)
+{
+	/* Just empty function now - can't decide what to choose */
+	debug("%s: %s\n", __func__, name);
+
+	return 0;
+}
+#endif
+
+void board_init_f(ulong dummy)
+{
+	struct udevice *dev;
+	int ret;
+
+	/* Clear the BSS. */
+	memset(__bss_start, 0, __bss_end - __bss_start);
+
+	arch_cpu_init();
+
+	board_early_init_f();
+
+	timer_init();
+
+	preloader_console_init();
+
+	ret = spl_early_init();
+	if (ret) {
+		debug("spl_early_init() failed: %d\n", ret);
+		hang();
+	}
+
+	ret = uclass_get_device_by_name(UCLASS_CLK,
+					"clock-controller@30380000",
+					&dev);
+	if (ret < 0) {
+		printf("Failed to find clock node. Check device tree\n");
+		hang();
+	}
+
+	/* GPIOの初期化 */
+	set_out_gpios(gpios_out_high, ARRAY_SIZE(gpios_out_high), 1);
+	set_out_gpios(gpios_out_low, ARRAY_SIZE(gpios_out_low), 0);
+
+#if defined(CONFIG_TARGET_IMX8MN_PEW_MON) || defined(CONFIG_TARGET_IMX8MN_PEW_GW)
+	/* WLAN/BTの電源ON */
+	imx_iomux_v3_setup_multiple_pads(iomux_pads_wlan_config, 
+		ARRAY_SIZE(iomux_pads_wlan_config));
+
+	gpio_request(IMX_GPIO_NR(4, 23), "wlan1");
+	gpio_request(IMX_GPIO_NR(5, 22), "wlan2");
+	gpio_request(IMX_GPIO_NR(5, 27), "wlan3");
+	gpio_request(IMX_GPIO_NR(1, 1),  "wlan4");
+
+	gpio_direction_output(IMX_GPIO_NR(4, 23), 1);	/* WLAN CON[7]          */
+	gpio_direction_output(IMX_GPIO_NR(5, 22), 0);	/* WLAN CONFIG_XOSC_SEL */
+	gpio_direction_output(IMX_GPIO_NR(5, 27), 1);	/* pull CON[8]          */
+
+	gpio_direction_output(IMX_GPIO_NR(1,  1), 1);	/* WIFIBT_PMIC_EN       */
+	mdelay(200);
+
+	gpio_direction_output(IMX_GPIO_NR(4, 23), 0);
+	gpio_direction_output(IMX_GPIO_NR(5, 22), 0);
+	gpio_direction_output(IMX_GPIO_NR(5, 27), 0);
+
+	gpio_free(IMX_GPIO_NR(4, 23));
+	gpio_free(IMX_GPIO_NR(5, 22));
+	gpio_free(IMX_GPIO_NR(5, 27));
+	gpio_free(IMX_GPIO_NR(1, 1));
+
+	imx_iomux_v3_setup_multiple_pads(iomux_pads_wlan_normal, 
+		ARRAY_SIZE(iomux_pads_wlan_normal));
+#endif //CONFIG_TARGET_IMX8MN_PEW_MON || CONFIG_TARGET_IMX8MN_PEW_GW
+
+#if defined(CONFIG_TARGET_IMX8MN_PEW_BIZGW)
+	mdelay(10);
+	gpio_request(IMX_GPIO_NR(1, 11), "setup");
+	gpio_request(IMX_GPIO_NR(1, 28), "setup");
+	gpio_direction_output(IMX_GPIO_NR(1, 11), 1);	/* RS485#A MCU_RESET_B - Release Reset */
+	gpio_direction_output(IMX_GPIO_NR(1, 28), 1);	/* RS485#B MCU_RESET_B - Release Reset */
+	gpio_free(IMX_GPIO_NR(1, 11));
+	gpio_free(IMX_GPIO_NR(1, 28));
+#endif //CONFIG_TARGET_IMX8MN_PEW_BIZGW
+
+	enable_tzc380();
+
+	power_init_board();
+
+	/* DDR initialization */
+	spl_dram_init();
+
+	board_init_r(NULL, 0);
+}
diff --git a/configs/imx8mn_pew_bizgw_defconfig b/configs/imx8mn_pew_bizgw_defconfig
new file mode 100644
index 00000000..55c0df74
--- /dev/null
+++ b/configs/imx8mn_pew_bizgw_defconfig
@@ -0,0 +1,139 @@
+CONFIG_ARM=y
+CONFIG_ARCH_IMX8M=y
+CONFIG_SYS_TEXT_BASE=0x40200000
+CONFIG_SYS_MALLOC_LEN=0x2000000
+CONFIG_SYS_MALLOC_F_LEN=0x10000
+CONFIG_SPL_GPIO=y
+CONFIG_SPL_LIBCOMMON_SUPPORT=y
+CONFIG_SPL_LIBGENERIC_SUPPORT=y
+CONFIG_NR_DRAM_BANKS=2
+CONFIG_SYS_MEMTEST_START=0x50000000
+CONFIG_SYS_MEMTEST_END=0x60000000
+CONFIG_ENV_SIZE=0x4000
+CONFIG_ENV_OFFSET=0x400000
+CONFIG_ENV_SECT_SIZE=0x10000
+CONFIG_SYS_I2C_MXC_I2C1=y
+CONFIG_SYS_I2C_MXC_I2C2=y
+CONFIG_SYS_I2C_MXC_I2C4=y
+CONFIG_DM_GPIO=y
+CONFIG_SPL_TEXT_BASE=0x912000
+CONFIG_IMX8MN_PEW=y
+CONFIG_TARGET_IMX8MN_PEW_BIZGW=y
+CONFIG_SPL_SERIAL=y
+CONFIG_SPL_DRIVERS_MISC=y
+CONFIG_SPL=y
+CONFIG_SPL_IMX_ROMAPI_LOADADDR=0x48000000
+CONFIG_DEFAULT_DEVICE_TREE="imx8mn-pew-bizgw"
+CONFIG_DISTRO_DEFAULTS=y
+CONFIG_SYS_LOAD_ADDR=0x40400000
+CONFIG_FIT=y
+CONFIG_FIT_EXTERNAL_OFFSET=0x3000
+CONFIG_SPL_LOAD_FIT=y
+# CONFIG_USE_SPL_FIT_GENERATOR is not set
+CONFIG_OF_SYSTEM_SETUP=y
+CONFIG_BOOTCOMMAND="run distro_bootcmd;run bsp_bootcmd"
+CONFIG_DEFAULT_FDT_FILE="imx8mn-pew-bizgw.dtb"
+CONFIG_ARCH_MISC_INIT=y
+CONFIG_BOARD_EARLY_INIT_F=y
+CONFIG_BOARD_LATE_INIT=y
+CONFIG_SPL_BOARD_INIT=y
+CONFIG_SPL_BOOTROM_SUPPORT=y
+# CONFIG_SPL_RAW_IMAGE_SUPPORT is not set
+CONFIG_SPL_LEGACY_IMAGE_SUPPORT=y
+CONFIG_SPL_LEGACY_IMAGE_CRC_CHECK=y
+CONFIG_SPL_SEPARATE_BSS=y
+CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_USE_SECTOR=y
+CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_SECTOR=0x300
+CONFIG_SPL_I2C=y
+CONFIG_SPL_POWER=y
+CONFIG_SPL_WATCHDOG=y
+CONFIG_SYS_PROMPT="u-boot=> "
+CONFIG_BOOTDELAY=0
+CONFIG_DISABLE_CONSOLE=y
+# CONFIG_NET is not set
+# CONFIG_BOOTM_NETBSD is not set
+# CONFIG_CMD_EXPORTENV is not set
+# CONFIG_CMD_IMPORTENV is not set
+CONFIG_CMD_ERASEENV=y
+CONFIG_CMD_NVEDIT_EFI=y
+CONFIG_CMD_CRC32=y
+CONFIG_CRC32_VERIFY=y
+CONFIG_CMD_MEMTEST=y
+CONFIG_CMD_CLK=y
+CONFIG_CMD_DFU=y
+CONFIG_CMD_FUSE=y
+CONFIG_CMD_GPIO=y
+CONFIG_CMD_I2C=y
+CONFIG_CMD_MMC=y
+CONFIG_CMD_POWEROFF=y
+CONFIG_CMD_CACHE=y
+CONFIG_CMD_EFIDEBUG=y
+CONFIG_CMD_TIME=y
+CONFIG_CMD_GETTIME=y
+CONFIG_CMD_TIMER=y
+CONFIG_CMD_SQUASHFS=y
+CONFIG_FS_SQUASHFS=y
+CONFIG_CMD_REGULATOR=y
+CONFIG_CMD_EXT4_WRITE=y
+CONFIG_OF_CONTROL=y
+CONFIG_SPL_OF_CONTROL=y
+CONFIG_ENV_OVERWRITE=y
+CONFIG_ENV_IS_NOWHERE=y
+CONFIG_ENV_IS_IN_MMC=y
+CONFIG_SYS_RELOC_GD_ENV_ADDR=y
+CONFIG_SYS_MMC_ENV_DEV=1
+CONFIG_ENV_VARS_UBOOT_RUNTIME_CONFIG=y
+CONFIG_SPL_DM=y
+CONFIG_REGMAP=y
+CONFIG_SYSCON=y
+CONFIG_SPL_CLK_IMX8MN=y
+CONFIG_CLK_IMX8MN=y
+CONFIG_DFU_MMC=y
+CONFIG_DFU_RAM=y
+CONFIG_MXC_GPIO=y
+CONFIG_DM_I2C=y
+CONFIG_SYS_I2C_MXC=y
+CONFIG_SUPPORT_EMMC_RPMB=y
+CONFIG_SUPPORT_EMMC_BOOT=y
+CONFIG_MMC_IO_VOLTAGE=y
+CONFIG_MMC_UHS_SUPPORT=y
+CONFIG_MMC_HS400_ES_SUPPORT=y
+CONFIG_MMC_HS400_SUPPORT=y
+CONFIG_SPL_MMC_HS400_SUPPORT=y
+CONFIG_FSL_USDHC=y
+CONFIG_PINCTRL=y
+CONFIG_SPL_PINCTRL=y
+CONFIG_PINCTRL_IMX8M=y
+CONFIG_DM_PMIC=y
+CONFIG_SPL_DM_PMIC_PCA9450=y
+CONFIG_DM_REGULATOR=y
+CONFIG_SPL_DM_REGULATOR=y
+CONFIG_DM_REGULATOR_FIXED=y
+CONFIG_DM_REGULATOR_GPIO=y
+CONFIG_DM_RESET=y
+CONFIG_RESET_DISPMIX=y
+CONFIG_MXC_UART=y
+CONFIG_SYSRESET=y
+CONFIG_SYSRESET_PSCI=y
+CONFIG_DM_THERMAL=y
+CONFIG_IMX_TMU=y
+CONFIG_LZO=y
+CONFIG_BZIP2=y
+CONFIG_OF_LIBFDT_OVERLAY=y
+CONFIG_EFI_SET_TIME=y
+CONFIG_EFI_RUNTIME_UPDATE_CAPSULE=y
+CONFIG_EFI_CAPSULE_ON_DISK=y
+CONFIG_EFI_CAPSULE_FIRMWARE_RAW=y
+CONFIG_EFI_SECURE_BOOT=y
+CONFIG_SPL_RSA=y
+CONFIG_SHA384=y
+CONFIG_EFI_VAR_BUF_SIZE=139264
+CONFIG_EFI_IGNORE_OSINDICATIONS=y
+CONFIG_EFI_CAPSULE_AUTHENTICATE=y
+CONFIG_OPTEE=y
+CONFIG_CMD_OPTEE_RPMB=y
+CONFIG_EFI_MM_COMM_TEE=y
+CONFIG_TEE=y
+CONFIG_EFI_ESRT=y
+CONFIG_EFI_HAVE_CAPSULE_UPDATE=y
+CONFIG_FIT_SIGNATURE=y
diff --git a/configs/imx8mn_pew_gw_defconfig b/configs/imx8mn_pew_gw_defconfig
new file mode 100644
index 00000000..c549302a
--- /dev/null
+++ b/configs/imx8mn_pew_gw_defconfig
@@ -0,0 +1,139 @@
+CONFIG_ARM=y
+CONFIG_ARCH_IMX8M=y
+CONFIG_SYS_TEXT_BASE=0x40200000
+CONFIG_SYS_MALLOC_LEN=0x2000000
+CONFIG_SYS_MALLOC_F_LEN=0x10000
+CONFIG_SPL_GPIO=y
+CONFIG_SPL_LIBCOMMON_SUPPORT=y
+CONFIG_SPL_LIBGENERIC_SUPPORT=y
+CONFIG_NR_DRAM_BANKS=2
+CONFIG_SYS_MEMTEST_START=0x50000000
+CONFIG_SYS_MEMTEST_END=0x60000000
+CONFIG_ENV_SIZE=0x4000
+CONFIG_ENV_OFFSET=0x400000
+CONFIG_ENV_SECT_SIZE=0x10000
+CONFIG_SYS_I2C_MXC_I2C1=y
+CONFIG_SYS_I2C_MXC_I2C2=y
+CONFIG_SYS_I2C_MXC_I2C4=y
+CONFIG_DM_GPIO=y
+CONFIG_SPL_TEXT_BASE=0x912000
+CONFIG_IMX8MN_PEW=y
+CONFIG_TARGET_IMX8MN_PEW_GW=y
+CONFIG_SPL_SERIAL=y
+CONFIG_SPL_DRIVERS_MISC=y
+CONFIG_SPL=y
+CONFIG_SPL_IMX_ROMAPI_LOADADDR=0x48000000
+CONFIG_DEFAULT_DEVICE_TREE="imx8mn-pew-gw"
+CONFIG_DISTRO_DEFAULTS=y
+CONFIG_SYS_LOAD_ADDR=0x40400000
+CONFIG_FIT=y
+CONFIG_FIT_EXTERNAL_OFFSET=0x3000
+CONFIG_SPL_LOAD_FIT=y
+# CONFIG_USE_SPL_FIT_GENERATOR is not set
+CONFIG_OF_SYSTEM_SETUP=y
+CONFIG_BOOTCOMMAND="run distro_bootcmd;run bsp_bootcmd"
+CONFIG_DEFAULT_FDT_FILE="imx8mn-pew-gw.dtb"
+CONFIG_ARCH_MISC_INIT=y
+CONFIG_BOARD_EARLY_INIT_F=y
+CONFIG_BOARD_LATE_INIT=y
+CONFIG_SPL_BOARD_INIT=y
+CONFIG_SPL_BOOTROM_SUPPORT=y
+# CONFIG_SPL_RAW_IMAGE_SUPPORT is not set
+CONFIG_SPL_LEGACY_IMAGE_SUPPORT=y
+CONFIG_SPL_LEGACY_IMAGE_CRC_CHECK=y
+CONFIG_SPL_SEPARATE_BSS=y
+CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_USE_SECTOR=y
+CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_SECTOR=0x300
+CONFIG_SPL_I2C=y
+CONFIG_SPL_POWER=y
+CONFIG_SPL_WATCHDOG=y
+CONFIG_SYS_PROMPT="u-boot=> "
+CONFIG_BOOTDELAY=0
+CONFIG_DISABLE_CONSOLE=y
+# CONFIG_NET is not set
+# CONFIG_BOOTM_NETBSD is not set
+# CONFIG_CMD_EXPORTENV is not set
+# CONFIG_CMD_IMPORTENV is not set
+CONFIG_CMD_ERASEENV=y
+CONFIG_CMD_NVEDIT_EFI=y
+CONFIG_CMD_CRC32=y
+CONFIG_CRC32_VERIFY=y
+CONFIG_CMD_MEMTEST=y
+CONFIG_CMD_CLK=y
+CONFIG_CMD_DFU=y
+CONFIG_CMD_FUSE=y
+CONFIG_CMD_GPIO=y
+CONFIG_CMD_I2C=y
+CONFIG_CMD_MMC=y
+CONFIG_CMD_POWEROFF=y
+CONFIG_CMD_CACHE=y
+CONFIG_CMD_EFIDEBUG=y
+CONFIG_CMD_TIME=y
+CONFIG_CMD_GETTIME=y
+CONFIG_CMD_TIMER=y
+CONFIG_CMD_SQUASHFS=y
+CONFIG_FS_SQUASHFS=y
+CONFIG_CMD_REGULATOR=y
+CONFIG_CMD_EXT4_WRITE=y
+CONFIG_OF_CONTROL=y
+CONFIG_SPL_OF_CONTROL=y
+CONFIG_ENV_OVERWRITE=y
+CONFIG_ENV_IS_NOWHERE=y
+CONFIG_ENV_IS_IN_MMC=y
+CONFIG_SYS_RELOC_GD_ENV_ADDR=y
+CONFIG_SYS_MMC_ENV_DEV=1
+CONFIG_ENV_VARS_UBOOT_RUNTIME_CONFIG=y
+CONFIG_SPL_DM=y
+CONFIG_REGMAP=y
+CONFIG_SYSCON=y
+CONFIG_SPL_CLK_IMX8MN=y
+CONFIG_CLK_IMX8MN=y
+CONFIG_DFU_MMC=y
+CONFIG_DFU_RAM=y
+CONFIG_MXC_GPIO=y
+CONFIG_DM_I2C=y
+CONFIG_SYS_I2C_MXC=y
+CONFIG_SUPPORT_EMMC_RPMB=y
+CONFIG_SUPPORT_EMMC_BOOT=y
+CONFIG_MMC_IO_VOLTAGE=y
+CONFIG_MMC_UHS_SUPPORT=y
+CONFIG_MMC_HS400_ES_SUPPORT=y
+CONFIG_MMC_HS400_SUPPORT=y
+CONFIG_SPL_MMC_HS400_SUPPORT=y
+CONFIG_FSL_USDHC=y
+CONFIG_PINCTRL=y
+CONFIG_SPL_PINCTRL=y
+CONFIG_PINCTRL_IMX8M=y
+CONFIG_DM_PMIC=y
+CONFIG_SPL_DM_PMIC_PCA9450=y
+CONFIG_DM_REGULATOR=y
+CONFIG_SPL_DM_REGULATOR=y
+CONFIG_DM_REGULATOR_FIXED=y
+CONFIG_DM_REGULATOR_GPIO=y
+CONFIG_DM_RESET=y
+CONFIG_RESET_DISPMIX=y
+CONFIG_MXC_UART=y
+CONFIG_SYSRESET=y
+CONFIG_SYSRESET_PSCI=y
+CONFIG_DM_THERMAL=y
+CONFIG_IMX_TMU=y
+CONFIG_LZO=y
+CONFIG_BZIP2=y
+CONFIG_OF_LIBFDT_OVERLAY=y
+CONFIG_EFI_SET_TIME=y
+CONFIG_EFI_RUNTIME_UPDATE_CAPSULE=y
+CONFIG_EFI_CAPSULE_ON_DISK=y
+CONFIG_EFI_CAPSULE_FIRMWARE_RAW=y
+CONFIG_EFI_SECURE_BOOT=y
+CONFIG_SPL_RSA=y
+CONFIG_SHA384=y
+CONFIG_EFI_VAR_BUF_SIZE=139264
+CONFIG_EFI_IGNORE_OSINDICATIONS=y
+CONFIG_EFI_CAPSULE_AUTHENTICATE=y
+CONFIG_OPTEE=y
+CONFIG_CMD_OPTEE_RPMB=y
+CONFIG_EFI_MM_COMM_TEE=y
+CONFIG_TEE=y
+CONFIG_EFI_ESRT=y
+CONFIG_EFI_HAVE_CAPSULE_UPDATE=y
+CONFIG_FIT_SIGNATURE=y
diff --git a/configs/imx8mn_pew_mon_defconfig b/configs/imx8mn_pew_mon_defconfig
new file mode 100644
index 00000000..9f5a465b
--- /dev/null
+++ b/configs/imx8mn_pew_mon_defconfig
@@ -0,0 +1,140 @@
+CONFIG_ARM=y
+CONFIG_ARCH_IMX8M=y
+CONFIG_SYS_TEXT_BASE=0x40200000
+CONFIG_SYS_MALLOC_LEN=0x2000000
+CONFIG_SYS_MALLOC_F_LEN=0x10000
+CONFIG_SPL_GPIO=y
+CONFIG_SPL_LIBCOMMON_SUPPORT=y
+CONFIG_SPL_LIBGENERIC_SUPPORT=y
+CONFIG_NR_DRAM_BANKS=2
+CONFIG_SYS_MEMTEST_START=0x60000000
+CONFIG_SYS_MEMTEST_END=0x80000000
+CONFIG_ENV_SIZE=0x4000
+CONFIG_ENV_OFFSET=0x400000
+CONFIG_ENV_SECT_SIZE=0x10000
+CONFIG_SYS_I2C_MXC_I2C1=y
+CONFIG_SYS_I2C_MXC_I2C2=y
+CONFIG_SYS_I2C_MXC_I2C3=y
+CONFIG_SYS_I2C_MXC_I2C4=y
+CONFIG_DM_GPIO=y
+CONFIG_SPL_TEXT_BASE=0x912000
+CONFIG_IMX8MN_PEW=y
+CONFIG_TARGET_IMX8MN_PEW_MON=y
+CONFIG_SPL_SERIAL=y
+CONFIG_SPL_DRIVERS_MISC=y
+CONFIG_SPL=y
+CONFIG_SPL_IMX_ROMAPI_LOADADDR=0x48000000
+CONFIG_DEFAULT_DEVICE_TREE="imx8mn-pew-mon"
+CONFIG_DISTRO_DEFAULTS=y
+CONFIG_SYS_LOAD_ADDR=0x40400000
+CONFIG_FIT=y
+CONFIG_FIT_EXTERNAL_OFFSET=0x3000
+CONFIG_SPL_LOAD_FIT=y
+# CONFIG_USE_SPL_FIT_GENERATOR is not set
+CONFIG_OF_SYSTEM_SETUP=y
+CONFIG_BOOTCOMMAND="run distro_bootcmd;run bsp_bootcmd"
+CONFIG_DEFAULT_FDT_FILE="imx8mn-pew-mon.dtb"
+CONFIG_ARCH_MISC_INIT=y
+CONFIG_BOARD_EARLY_INIT_F=y
+CONFIG_BOARD_LATE_INIT=y
+CONFIG_SPL_BOARD_INIT=y
+CONFIG_SPL_BOOTROM_SUPPORT=y
+# CONFIG_SPL_RAW_IMAGE_SUPPORT is not set
+CONFIG_SPL_LEGACY_IMAGE_SUPPORT=y
+CONFIG_SPL_LEGACY_IMAGE_CRC_CHECK=y
+CONFIG_SPL_SEPARATE_BSS=y
+CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_USE_SECTOR=y
+CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_SECTOR=0x300
+CONFIG_SPL_I2C=y
+CONFIG_SPL_POWER=y
+CONFIG_SPL_WATCHDOG=y
+CONFIG_SYS_PROMPT="u-boot=> "
+CONFIG_BOOTDELAY=0
+CONFIG_DISABLE_CONSOLE=y
+# CONFIG_NET is not set
+# CONFIG_BOOTM_NETBSD is not set
+# CONFIG_CMD_EXPORTENV is not set
+# CONFIG_CMD_IMPORTENV is not set
+CONFIG_CMD_ERASEENV=y
+CONFIG_CMD_NVEDIT_EFI=y
+CONFIG_CMD_CRC32=y
+CONFIG_CRC32_VERIFY=y
+CONFIG_CMD_MEMTEST=y
+CONFIG_CMD_CLK=y
+CONFIG_CMD_DFU=y
+CONFIG_CMD_FUSE=y
+CONFIG_CMD_GPIO=y
+CONFIG_CMD_I2C=y
+CONFIG_CMD_MMC=y
+CONFIG_CMD_POWEROFF=y
+CONFIG_CMD_CACHE=y
+CONFIG_CMD_EFIDEBUG=y
+CONFIG_CMD_TIME=y
+CONFIG_CMD_GETTIME=y
+CONFIG_CMD_TIMER=y
+CONFIG_CMD_SQUASHFS=y
+CONFIG_FS_SQUASHFS=y
+CONFIG_CMD_REGULATOR=y
+CONFIG_CMD_EXT4_WRITE=y
+CONFIG_OF_CONTROL=y
+CONFIG_SPL_OF_CONTROL=y
+CONFIG_ENV_OVERWRITE=y
+CONFIG_ENV_IS_NOWHERE=y
+CONFIG_ENV_IS_IN_MMC=y
+CONFIG_SYS_RELOC_GD_ENV_ADDR=y
+CONFIG_SYS_MMC_ENV_DEV=1
+CONFIG_ENV_VARS_UBOOT_RUNTIME_CONFIG=y
+CONFIG_SPL_DM=y
+CONFIG_REGMAP=y
+CONFIG_SYSCON=y
+CONFIG_SPL_CLK_IMX8MN=y
+CONFIG_CLK_IMX8MN=y
+CONFIG_DFU_MMC=y
+CONFIG_DFU_RAM=y
+CONFIG_MXC_GPIO=y
+CONFIG_DM_I2C=y
+CONFIG_SYS_I2C_MXC=y
+CONFIG_SUPPORT_EMMC_RPMB=y
+CONFIG_SUPPORT_EMMC_BOOT=y
+CONFIG_MMC_IO_VOLTAGE=y
+CONFIG_MMC_UHS_SUPPORT=y
+CONFIG_MMC_HS400_ES_SUPPORT=y
+CONFIG_MMC_HS400_SUPPORT=y
+CONFIG_SPL_MMC_HS400_SUPPORT=y
+CONFIG_FSL_USDHC=y
+CONFIG_PINCTRL=y
+CONFIG_SPL_PINCTRL=y
+CONFIG_PINCTRL_IMX8M=y
+CONFIG_DM_PMIC=y
+CONFIG_SPL_DM_PMIC_PCA9450=y
+CONFIG_DM_REGULATOR=y
+CONFIG_SPL_DM_REGULATOR=y
+CONFIG_DM_REGULATOR_FIXED=y
+CONFIG_DM_REGULATOR_GPIO=y
+CONFIG_DM_RESET=y
+CONFIG_RESET_DISPMIX=y
+CONFIG_MXC_UART=y
+CONFIG_SYSRESET=y
+CONFIG_SYSRESET_PSCI=y
+CONFIG_DM_THERMAL=y
+CONFIG_IMX_TMU=y
+CONFIG_LZO=y
+CONFIG_BZIP2=y
+CONFIG_OF_LIBFDT_OVERLAY=y
+CONFIG_EFI_SET_TIME=y
+CONFIG_EFI_RUNTIME_UPDATE_CAPSULE=y
+CONFIG_EFI_CAPSULE_ON_DISK=y
+CONFIG_EFI_CAPSULE_FIRMWARE_RAW=y
+CONFIG_EFI_SECURE_BOOT=y
+CONFIG_SPL_RSA=y
+CONFIG_SHA384=y
+CONFIG_EFI_VAR_BUF_SIZE=139264
+CONFIG_EFI_IGNORE_OSINDICATIONS=y
+CONFIG_EFI_CAPSULE_AUTHENTICATE=y
+CONFIG_OPTEE=y
+CONFIG_CMD_OPTEE_RPMB=y
+CONFIG_EFI_MM_COMM_TEE=y
+CONFIG_TEE=y
+CONFIG_EFI_ESRT=y
+CONFIG_EFI_HAVE_CAPSULE_UPDATE=y
+CONFIG_FIT_SIGNATURE=y
diff --git a/env/mmc.c b/env/mmc.c
index f7da22a0..604d0637 100644
--- a/env/mmc.c
+++ b/env/mmc.c
@@ -1,6 +1,7 @@
 // SPDX-License-Identifier: GPL-2.0+
 /*
  * (C) Copyright 2008-2011 Freescale Semiconductor, Inc.
+ * Copyright 2023 Panasonic Corporation
  */
 
 /* #define DEBUG */
@@ -207,6 +208,14 @@ static int env_mmc_save(void)
 	int	ret, copy = 0;
 	const char *errmsg;
 
+#ifdef CONFIG_IMX8MN_PEW
+	if (dev == 2) {
+		/* device is eMMC */
+		printf("Not support saveenv for eMMC.\n");
+		return 1;
+	}
+#endif
+
 	errmsg = init_mmc_for_env(mmc);
 	if (errmsg) {
 		printf("%s\n", errmsg);
@@ -275,6 +284,14 @@ static int env_mmc_erase(void)
 	u32	offset;
 	const char *errmsg;
 
+#ifdef CONFIG_IMX8MN_PEW
+	if (dev == 2) {
+		/* device is eMMC */
+		printf("Not support eraseenv for eMMC.\n");
+		return 1;
+	}
+#endif
+
 	errmsg = init_mmc_for_env(mmc);
 	if (errmsg) {
 		printf("%s\n", errmsg);
diff --git a/fs/squashfs/sqfs_inode.c b/fs/squashfs/sqfs_inode.c
index d25cfb53..9a43667f 100644
--- a/fs/squashfs/sqfs_inode.c
+++ b/fs/squashfs/sqfs_inode.c
@@ -1,6 +1,7 @@
 // SPDX-License-Identifier: GPL-2.0
 /*
  * Copyright (C) 2020 Bootlin
+ * Copyright 2022-2023 Panasonic Corporation
  *
  * Author: Joao Marcos Costa <joaomarcos.costa@bootlin.com>
  */
@@ -76,8 +77,7 @@ int sqfs_inode_size(struct squashfs_base_inode *inode, u32 blk_size)
 		return sizeof(*lreg) + blk_list_size * sizeof(u32);
 	}
 
-	case SQFS_SYMLINK_TYPE:
-	case SQFS_LSYMLINK_TYPE: {
+	case SQFS_SYMLINK_TYPE: {
 		struct squashfs_symlink_inode *symlink =
 			(struct squashfs_symlink_inode *)inode;
 
@@ -85,6 +85,14 @@ int sqfs_inode_size(struct squashfs_base_inode *inode, u32 blk_size)
 			get_unaligned_le32(&symlink->symlink_size);
 	}
 
+	case SQFS_LSYMLINK_TYPE: {
+		struct squashfs_symlink_inode *symlink =
+			(struct squashfs_symlink_inode *)inode;
+
+		return sizeof(*symlink) +
+			get_unaligned_le32(&symlink->symlink_size) + sizeof(u32);
+	}
+
 	case SQFS_BLKDEV_TYPE:
 	case SQFS_CHRDEV_TYPE:
 		return sizeof(struct squashfs_dev_inode);
diff --git a/include/configs/imx8mn_pew.h b/include/configs/imx8mn_pew.h
new file mode 100644
index 00000000..3012f74f
--- /dev/null
+++ b/include/configs/imx8mn_pew.h
@@ -0,0 +1,168 @@
+/* SPDX-License-Identifier: GPL-2.0+ */
+/*
+ * Copyright 2018 NXP
+ * Copyright 2022-2023 Panasonic Corporation
+ */
+
+#ifndef __IMX8MN_PEW_H
+#define __IMX8MN_PEW_H
+
+#include <linux/sizes.h>
+#include <linux/stringify.h>
+#include <asm/arch/imx-regs.h>
+#include "imx_env.h"
+
+#define CONFIG_SYS_BOOTM_LEN		(32 * SZ_1M)
+
+
+#define CONFIG_SPL_MAX_SIZE			(208 * 1024)
+#define CONFIG_SYS_MONITOR_LEN		(512 * 1024)
+#define CONFIG_SYS_UBOOT_BASE	\
+	(QSPI0_AMBA_BASE + CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_SECTOR * 512)
+
+#ifdef CONFIG_SPL_BUILD
+#define CONFIG_SPL_STACK			0x96fff0
+#define CONFIG_SPL_BSS_START_ADDR	0x954000
+#define CONFIG_MALLOC_F_ADDR		0x970000
+#define CONFIG_SPL_BSS_MAX_SIZE		SZ_8K	/* 8 KB */
+#define CONFIG_SYS_SPL_MALLOC_START	0x42200000
+#define CONFIG_SYS_SPL_MALLOC_SIZE	SZ_512K	/* 512 KB */
+
+/* For RAW image gives a error info not panic */
+#define CONFIG_SPL_ABORT_ON_RAW_IMAGE
+#endif
+
+#define CONFIG_CMD_READ
+#define CONFIG_SERIAL_TAG
+
+#define CONFIG_REMAKE_ELF
+
+#ifdef CONFIG_DISTRO_DEFAULTS
+#define BOOT_TARGET_DEVICES(func) \
+	func(MMC, mmc, 1) \
+	func(MMC, mmc, 2)
+
+#include <config_distro_bootcmd.h>
+#else
+#define BOOTENV
+#endif
+
+#define CONFIG_MFG_ENV_SETTINGS \
+	CONFIG_MFG_ENV_SETTINGS_DEFAULT \
+	"initrd_addr=0x43800000\0" \
+	"initrd_high=0xffffffffffffffff\0" \
+	"emmc_dev=2\0"\
+	"sd_dev=1\0" \
+
+/* Initial environment variables */
+#define CONFIG_EXTRA_ENV_SETTINGS		\
+	CONFIG_MFG_ENV_SETTINGS \
+	BOOTENV \
+	"prepare_mcore=setenv mcore_clk clk-imx8mn.mcore_booted;\0" \
+	"scriptaddr=0x43500000\0" \
+	"kernel_addr_r=" __stringify(CONFIG_SYS_LOAD_ADDR) "\0" \
+	"bsp_script=boot.scr\0" \
+	"image=Image-initramfs\0" \
+	"splashimage=0x50000000\0" \
+	"console=ttymxc1,115200\0" \
+	"fdt_addr_r=0x4A000000\0" \
+	"fdt_addr=0x4A000000\0" \
+	"fdt_high=0xffffffffffffffff\0" \
+	"boot_fit=no\0" \
+	"fdtfile=" CONFIG_DEFAULT_FDT_FILE "\0" \
+	"bootm_size=0x10000000\0" \
+	"mmcdev="__stringify(CONFIG_SYS_MMC_ENV_DEV)"\0" \
+	"mmcpart=1\0" \
+	"mmcroot=" CONFIG_MMCROOT " rootwait rw\0" \
+	"select_mmcroot=ext4load mmc ${mmcdev}:8 ${loadaddr} /.pf/sides; " \
+		"if test $? -ne 0; then " \
+			"setenv mmcroot \"" CONFIG_MMCROOT " rootwait rw\"; " \
+		"else " \
+			"mw.b " __stringify(CONFIG_MMCROOTSIDE_ADDR) " 0x31 1; " \
+			"cmp.b ${loadaddr} " __stringify(CONFIG_MMCROOTSIDE_ADDR) " 1; " \
+			"if test $? -ne 0; then " \
+				"setenv mmcroot \"" CONFIG_MMCROOT " rootwait rw\"; " \
+			"else " \
+				"setenv mmcroot \"" CONFIG_MMCROOT_OTHER " rootwait rw\"; " \
+			"fi; " \
+		"fi;\0" \
+	"mmcautodetect=yes\0" \
+	"mmcargs=setenv bootargs ${mcore_clk} console=${console} root=${mmcroot}\0 " \
+	"loadbootscript=sqfsload mmc ${mmcdev}:${mmcpart} ${loadaddr} /boot/${bsp_script};\0" \
+	"bootscript=echo Running bootscript from mmc ...; " \
+		"source\0" \
+	"loadimage=sqfsload mmc ${mmcdev}:${mmcpart} ${loadaddr} /boot/${image}\0" \
+	"loadfdt=sqfsload mmc ${mmcdev}:${mmcpart} ${fdt_addr_r} /boot/${fdtfile}\0" \
+	"mmcboot=echo Booting from mmc ...; " \
+		"run mmcargs; " \
+		"if test ${boot_fit} = yes || test ${boot_fit} = try; then " \
+			"bootm ${loadaddr}; " \
+		"else " \
+			"if run loadfdt; then " \
+				"booti ${loadaddr} - ${fdt_addr_r}; " \
+			"else " \
+				"echo WARN: Cannot load the DT; " \
+			"fi; " \
+		"fi;\0" \
+	"bsp_bootcmd=echo Running BSP bootcmd ...; " \
+		"echo Select mmcroot p${mmcpart}; " \
+		"mmc dev ${mmcdev}; if mmc rescan; then " \
+		   "if run loadbootscript; then " \
+			   "run bootscript; " \
+		   "else " \
+			   "if run loadimage; then " \
+				   "run mmcboot; " \
+			   "fi; " \
+		   "fi; " \
+	   "fi;\0" \
+	"debug_console_check= "\
+		"setenv debug_console on; "\
+		"setenv console ttymxc1,115200; "\
+		"ext4ls mmc ${mmcdev}:9; "\
+		"if test $? -ne 1; then "\
+			"ext4ls mmc ${mmcdev}:9 /debug; " \
+			"if test $? -eq 1; then "\
+				"setenv debug_console; "\
+				"setenv console null; "\
+			"fi; "\
+		"fi;\0"
+
+/* Link Definitions */
+
+#define CONFIG_SYS_INIT_RAM_ADDR	0x40000000
+#define CONFIG_SYS_INIT_RAM_SIZE	0x80000
+#define CONFIG_SYS_INIT_SP_OFFSET \
+	(CONFIG_SYS_INIT_RAM_SIZE - GENERATED_GBL_DATA_SIZE)
+#define CONFIG_SYS_INIT_SP_ADDR \
+	(CONFIG_SYS_INIT_RAM_ADDR + CONFIG_SYS_INIT_SP_OFFSET)
+
+#define CONFIG_MMCROOT				"/dev/mmcblk1p1"  /* USDHC2 */
+#define CONFIG_MMCROOT_OTHER		"/dev/mmcblk1p2"  /* USDHC2 */
+#define CONFIG_MMCROOTSIDE_ADDR		0x40480008 /* CONFIG_LOADADDR(=loadaddr) + 8 */
+
+#define CONFIG_SYS_SDRAM_BASE		0x40000000
+#define PHYS_SDRAM					0x40000000
+
+#ifdef CONFIG_TARGET_IMX8MN_PEW_MON
+#define PHYS_SDRAM_SIZE				0x20000000 /* 512MB DDR */
+#else
+#define PHYS_SDRAM_SIZE				0x20000000 /* 512MB DDR */
+#endif
+
+#define CONFIG_MXC_UART_BASE		UART2_BASE_ADDR
+
+/* Monitor Command Prompt */
+#define CONFIG_SYS_CBSIZE			2048
+#define CONFIG_SYS_MAXARGS			64
+#define CONFIG_SYS_BARGSIZE			CONFIG_SYS_CBSIZE
+#define CONFIG_SYS_PBSIZE \
+	(CONFIG_SYS_CBSIZE + sizeof(CONFIG_SYS_PROMPT) + 16)
+
+#define CONFIG_IMX_BOOTAUX
+
+/* USDHC */
+
+#define CONFIG_SYS_FSL_USDHC_NUM	2
+#define CONFIG_SYS_FSL_ESDHC_ADDR	0
+
+#endif
diff --git a/scripts/config_whitelist.txt b/scripts/config_whitelist.txt
index 8abfe478..d45b28ff 100644
--- a/scripts/config_whitelist.txt
+++ b/scripts/config_whitelist.txt
@@ -561,6 +561,8 @@ CONFIG_MISC_COMMON
 CONFIG_MIU_2BIT_21_7_INTERLEAVED
 CONFIG_MIU_2BIT_INTERLEAVED
 CONFIG_MMCROOT
+CONFIG_MMCROOTSIDE_ADDR
+CONFIG_MMCROOT_OTHER
 CONFIG_MMC_DEFAULT_DEV
 CONFIG_MMC_SUNXI_SLOT
 CONFIG_MONITOR_IS_IN_RAM
